{"version":3,"file":"static/js/1482.7cb6c55f.chunk.js","mappings":"yRAcMA,GAAqBC,EAAAA,EAAAA,OAAK,SAACC,GAC/B,IACEC,EAKED,EALFC,UACAC,EAIEF,EAJFE,KAFF,EAMIF,EAHFG,6BAAAA,OAHF,WAMIH,EAFFI,SAAAA,OAJF,MAIaC,EAAAA,EAJb,EAKKC,GALL,OAMIN,EANJ,GAQQO,EAAqBN,EAArBM,IAAKC,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KAEZC,EAAgBR,EAAhBQ,IAAKC,EAAWT,EAAXS,OAEb,OACE,SAACP,GAAD,2BACQH,UAAAA,EAAWC,KAAAA,EAAMC,6BAAAA,GAAiCG,IAD1D,IAEEM,gBAAgB,EAChBC,YACE,+BACE,eAAIC,MAAO,CAAEC,MAAO,QAASC,WAAY,IAAKC,SAAU,QAAxD,SACGP,EAAI,wBAIXQ,UACE,kBACEC,GAAG,yBACHC,WAAWC,EAAAA,EAAAA,GAAKf,EAAQgB,aACxBC,OAAQhB,EAAIiB,YACZC,OAAO,OAJT,WAME,iBAAKL,WAAWC,EAAAA,EAAAA,GAAKf,EAAQoB,kBAA7B,WACE,gBAAKN,WAAWC,EAAAA,EAAAA,GAAKf,EAAQqB,qBAA7B,UACE,kBAAOC,QAAQ,WAAWR,WAAWC,EAAAA,EAAAA,GAAKf,EAAQuB,cAAlD,SACIrB,EAAMsB,sBAEHtB,EAAMuB,4BAEPrB,EAAI,SADJA,EAAI,mBAFJA,EAAI,iBAMZ,gBAAKU,WAAWC,EAAAA,EAAAA,GAAKf,EAAQ0B,qBAA7B,UACE,kBACEC,KAAK,OACLd,GAAG,WACHe,KAAK,WACLd,WAAWC,EAAAA,EAAAA,GAAKf,EAAQ6B,cACxBC,WAAS,EACTC,kBACWC,IAAT7B,GAAsBA,EAAK8B,aAAe9B,EAAK+B,uBAAoBF,UAK3E,gBAAKlB,WAAWC,EAAAA,EAAAA,GAAKf,EAAQoB,iBAAkBpB,EAAQmC,oBAAvD,UACE,iBAAKtB,GAAG,kBAAkBC,WAAWC,EAAAA,EAAAA,GAAKf,EAAQoC,oBAAlD,WACE,kBACEtB,WAAWC,EAAAA,EAAAA,GACTf,EAAQqC,cACRrC,EAAQsC,qBACRtC,EAAQuC,mBACRvC,EAAQwC,oBAEVb,KAAK,SACLc,MAAOpC,EAAO,eAEhB,gBACEG,MAAO,CACLkC,MAAO,OACPC,OAAQ,MACRC,WAAY,qBACZC,OAAQ,sBAGZ,gBAAKhC,GAAG,kBAAkBC,WAAWC,EAAAA,EAAAA,GAAKf,EAAQ8C,oBAAlD,UACE,gBAAKhC,WAAWC,EAAAA,EAAAA,GAAKf,EAAQ+C,2BAA7B,UACE,kBACEvC,MAAO,CACLwC,QAAS,OACTvC,MAAO,UACPE,SAAU,OACVD,WAAY,KALhB,qCAQwB,KARxB,KAQ8B,eAAGuC,KAAMhD,EAAIiD,SAAb,cAAyB9C,EAAI,iCAQvE+C,SAAU/C,EAAI,sBAGnB,IAED,W,sNCiLA,GAnQiBX,EAAAA,EAAAA,OAAK,SAACC,GACrB,MAaIA,EAZF0D,YAAAA,OADF,WAaI1D,EAXFY,eAAAA,OAFF,WAaIZ,EAVF2D,sBAAAA,OAHF,WAaI3D,EATF4D,YAAAA,OAJF,WAaI5D,EARF6D,wBAAAA,OALF,SAMEhD,EAOEb,EAPFa,WANF,EAaIb,EANF8D,iBAAAA,OAPF,MAOqB,KAPrB,EAQE5C,EAKElB,EALFkB,SARF,EAaIlB,EAJFyD,SAAAA,OATF,MASa,KATb,EAUExD,EAGED,EAHFC,UACAC,EAEEF,EAFFE,KACAC,EACEH,EADFG,6BAGMO,EAAuER,EAAvEQ,IAAKqD,EAAkE7D,EAAlE6D,aAAcC,EAAoD9D,EAApD8D,4BAA6BC,EAAuB/D,EAAvB+D,mBAElDC,GAA+BC,EAAAA,EAAAA,qBAAmB,gBAAEC,GAAF,sBACtDL,EAAaK,EADyC,IAIlDC,GAAuBC,EAAAA,EAAAA,mBAC3B,kBAAOC,SAASC,MAAM,kCAA2CC,UAAU,CAA3E,IAGMjE,EAA4DP,EAA5DO,MAAOkE,EAAqDzE,EAArDyE,OAAQjE,EAA6CR,EAA7CQ,KAAMF,EAAuCN,EAAvCM,IAAKoE,EAAkC1E,EAAlC0E,QAASC,EAAyB3E,EAAzB2E,qBAE3C,GAA8CC,EAAAA,EAAAA,aAAW,kBAAM,CAAN,IAAY,GAArE,eAAOC,EAAP,KAAyBC,EAAzB,KA6DA,OA3DAC,EAAAA,EAAAA,YAAU,WACR,GAAK7E,EAAL,CAKA,IAAI8E,GAAc,EACZC,EAA2B,GAE3BC,EAAQ,SAACC,GAAD,MACC,kBAANA,EAAiBA,EAAEC,MAAM,KAAhC,OAAuCD,QAAvC,IAAuCA,EAAAA,EAAK,EADhC,EAiCd,GA9BAE,QAAQC,IACN,kBACKJ,EAAMnF,EAAMwF,cAAcC,KAAI,SAAAC,GAAY,OAC3CC,EAAAA,EAAAA,UAASpF,EAAIqF,oBAAqBF,EADS,MAD/C,OAIKP,EAAMnF,EAAM6F,QAAQJ,KAAI,SAAAC,GAAY,OAAIC,EAAAA,EAAAA,UAASpF,EAAIuF,cAAeJ,EAAhC,MAEtCK,UACAN,KAAI,SAAAlC,GAAI,OACPyC,EAAAA,EAAAA,GAAW,CACT/D,KAAM,MACNsB,KAAAA,EACA0C,SAAU,WAJL,KAOXC,MAAK,WACDjB,GAIJF,GACD,IAEDI,EAAMnF,EAAMmG,SAASC,SAAQ,SAAAV,GAAY,OACvCM,EAAAA,EAAAA,GAAW,CACT/D,KAAM,aACNoE,KAAKV,EAAAA,EAAAA,UAASpF,EAAIuF,cAAeJ,IAHI,SAOfpD,IAAtBtC,EAAMsG,YAA2B,CACnC,IAAMC,EAAgBhC,SAASiC,qBAAqB,QAAQ,GAAGC,UAEzDC,GAASrF,EAAAA,EAAAA,GAAKrB,EAAMsG,aAAajB,MAAM,KAE7CkB,EAAcI,IAAd,MAAAJ,GAAa,OAAQG,IAErBxB,EAAS0B,MAAK,kBAAML,EAAcM,OAAd,MAAAN,GAAa,OAAWG,GAA9B,GACf,CAED,OAAO,WACLzB,GAAc,EAEdC,EAASkB,SAAQ,SAAAU,GAAC,OAAIA,GAAJ,GACnB,CApDA,CAFC/B,GAuDH,GAAE,CAAC/E,EAAMsG,cAELxB,GAKH,iBAAK1D,WAAWC,EAAAA,EAAAA,GAAKrB,EAAM+G,cAA3B,WACE,gBAAK5F,GAAG,YAAYC,WAAWC,EAAAA,EAAAA,GAAKrB,EAAMgH,eAA1C,UACE,gBAAK7F,GAAG,oBAAoBC,WAAWC,EAAAA,EAAAA,GAAKrB,EAAMiH,sBAAlD,UACE,gBAAKZ,IAAKa,EAASC,IAAI,kBAI3B,iBAAK/F,WAAWC,EAAAA,EAAAA,GAAKrB,EAAMoH,gBAAiBxD,GAAe5D,EAAMqH,wBAAjE,WACE,oBAAQjG,WAAWC,EAAAA,EAAAA,GAAKrB,EAAMsH,mBAA9B,UACG9G,EAAM+G,+BACJC,EAAAA,EAAAA,QAAkBlF,IAAXoC,IAAuB,IAC/BA,EAAO+C,UAAUC,OAAS,IACxB,gBAAKvG,GAAG,YAAR,UACE,gBAAKA,GAAG,oBAAoBC,WAAWC,EAAAA,EAAAA,GAAKrB,EAAM2H,sBAAlD,UACE,iBAAKvG,UAAU,cAAcD,GAAG,qBAAhC,WACE,cAAGoC,KAAK,IAAIpC,GAAG,yBAAf,SACG6C,EAA4BC,MAE/B,wBACGS,EAAO+C,UAAUhC,KAAI,gBAAGmC,EAAH,EAAGA,YAAH,OACpB,eAAsBxG,UAAU,mBAAhC,UACE,cAAGmC,KAAK,IAAIsE,QAAS3D,EAA6B0D,GAAlD,SACG5D,EAA4B4D,MAFxBA,EADW,kBAYtBtF,IAAT7B,IAAsBA,EAAK8B,cAAiB9B,EAAKqH,qBAClDnE,GACE,iBAAKvC,WAAWC,EAAAA,EAAAA,GAAKrB,EAAM+H,uBAA3B,WACE,gBAAK3G,WAAWC,EAAAA,EAAAA,GAAKrB,EAAM2B,oBAAqB,YAAhD,UACE,kBAAMP,UAAU,WAAhB,WACE,iBAAMA,UAAU,WAAhB,eACCV,EAAI,wBAGT,gBAAKU,UAAU,YAAf,UACE,eAAID,GAAG,gBAAP,SAAwBN,UAI5B,eAAIM,GAAG,gBAAP,SAAwBN,IAExB8C,GACF,iBAAKvC,WAAWC,EAAAA,EAAAA,GAAKrB,EAAM+H,uBAA3B,WACE,gBAAK3G,WAAWC,EAAAA,EAAAA,GAAKrB,EAAM2B,oBAAqB,YAAhD,UACE,kBAAMP,UAAU,WAAhB,WACE,iBAAMA,UAAU,WAAhB,eADF,IACuCV,EAAI,wBAG7C,iBAAKU,UAAU,YAAf,UACG0C,GACD,gBAAK1C,WAAWC,EAAAA,EAAAA,GAAKrB,EAAM0B,kBAA3B,UACE,iBAAKP,GAAG,cAAR,WACE,kBAAOA,GAAG,wBAAV,gBAAmCV,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAM+B,qBACzC,cAAGrB,GAAG,cAAcoC,KAAMhD,EAAIyH,oBAA9B,UACE,iBAAK5G,UAAU,mBAAf,WACE,cAAGA,WAAWC,EAAAA,EAAAA,GAAKrB,EAAMiI,oBACzB,iBAAM7G,UAAU,kBAAhB,SAAmCV,EAAI,0CAQnD,gCACGoD,GACD,gBAAK1C,WAAWC,EAAAA,EAAAA,GAAKrB,EAAM0B,kBAA3B,UACE,iBAAKP,GAAG,cAAR,WACE,kBAAOA,GAAG,wBAAV,gBAAmCV,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAM+B,qBACzC,cAAGrB,GAAG,cAAcoC,KAAMhD,EAAIyH,oBAA9B,UACE,iBAAK5G,UAAU,mBAAf,WACE,cAAGA,WAAWC,EAAAA,EAAAA,GAAKrB,EAAMiI,oBACzB,iBAAM7G,UAAU,kBAAhB,SAAmCV,EAAI,0CAQrD,gBAAKS,GAAG,aAAR,UACE,iBAAKA,GAAG,qBAAR,UAEGP,QACa0B,IAAZqC,IACkB,YAAjBA,EAAQ1C,OAAuB2C,KAC9B,iBAAKxD,WAAWC,EAAAA,EAAAA,GAAK,QAAD,gBAAmBsD,EAAQ1C,OAA/C,UACoB,YAAjB0C,EAAQ1C,OACP,iBACEb,WAAWC,EAAAA,EAAAA,GAAKrB,EAAMkI,uBACtBpH,MAAO,CAAEoC,WAAY,UAGP,YAAjByB,EAAQ1C,OACP,iBACEb,WAAWC,EAAAA,EAAAA,GAAKrB,EAAMmI,uBACtBrH,MAAO,CAAEoC,WAAY,UAGP,UAAjByB,EAAQ1C,OACP,iBACEb,WAAWC,EAAAA,EAAAA,GAAKrB,EAAMoI,qBACtBtH,MAAO,CAAEoC,WAAY,UAGP,SAAjByB,EAAQ1C,OACP,iBACEb,WAAWC,EAAAA,EAAAA,GAAKrB,EAAMqI,oBACtBvH,MAAO,CAAEoC,WAAY,WAGzB,iBACE9B,UAAU,mBACVN,MAAO,CAAEoC,WAAY,QACrBoF,wBAAyB,CACvBC,OAAQ5D,EAAQ6D,cAKzBtH,OACSoB,IAAT7B,GAAsBA,EAAKgI,uBAAyB5E,IACnD,iBACE1C,GAAG,iCACHI,OAAQhB,EAAIiB,YACZC,OAAO,OACPL,WAAWC,EAAAA,EAAAA,GAAKuC,GAAe5D,EAAM+H,uBAJvC,UAME,gBACE3G,WAAWC,EAAAA,EAAAA,GACTuC,GAAe,CACb5D,EAAM0I,gCACN1I,EAAM2I,2BAJZ,UAQE,iBAAKvH,WAAWC,EAAAA,EAAAA,GAAKrB,EAAM0B,kBAA3B,WACE,kBAAOO,KAAK,SAASC,KAAK,gBAAgBa,MAAM,QAChD,cAAGQ,KAAK,IAAIpC,GAAG,kBAAkB0G,QAASxD,EAA1C,SACG3D,EAAI,4BAMdgD,IACC,gBAAKvC,GAAG,UAAUC,WAAWC,EAAAA,EAAAA,GAAKrB,EAAM4I,eAAxC,UACE,gBAAKzH,GAAG,kBAAkBC,WAAWC,EAAAA,EAAAA,GAAKrB,EAAM6I,wBAAhD,SACGpF,iBA9JR,IAuKV,G,uBC7Rc,SAASqF,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IAEIE,EAAKC,EAFLC,EAAS,CAAC,EACVC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAW1B,OAAQwB,IACjCD,EAAMG,EAAWF,GACbF,EAASO,QAAQN,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,CACT,CDVe,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOG,sBAAuB,CAChC,IAAIC,EAAmBJ,OAAOG,sBAAsBT,GAEpD,IAAKG,EAAI,EAAGA,EAAIO,EAAiB/B,OAAQwB,IACvCD,EAAMQ,EAAiBP,GACnBF,EAASO,QAAQN,IAAQ,GACxBI,OAAOK,UAAUC,qBAAqBC,KAAKb,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CAEA,OAAOE,CACT,C","sources":["KcApp/screens/loginResetPassword/index.tsx","KcApp/screens/template/index.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import type { KcContextBase, KcProps } from 'keycloakify'\nimport { clsx } from 'keycloakify/lib/tools/clsx'\nimport { memo } from 'react'\nimport type { I18n } from '../../i18n'\nimport type { TemplateProps } from '../template'\nimport DefaultTemplate from '../template'\n\nexport type LoginResetPasswordProps = KcProps & {\n  kcContext: KcContextBase.LoginResetPassword\n  i18n: I18n\n  doFetchDefaultThemeResources?: boolean\n  Template?: (props: TemplateProps) => JSX.Element | null\n}\n\nconst LoginResetPassword = memo((props: LoginResetPasswordProps) => {\n  const {\n    kcContext,\n    i18n,\n    doFetchDefaultThemeResources = true,\n    Template = DefaultTemplate,\n    ...kcProps\n  } = props\n\n  const { url, realm, auth } = kcContext\n\n  const { msg, msgStr } = i18n\n\n  return (\n    <Template\n      {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n      displayMessage={false}\n      headerNode={\n        <>\n          <h1 style={{ color: 'black', fontWeight: 700, fontSize: '2rem' }}>\n            {msg('emailForgotTitle')}\n          </h1>\n        </>\n      }\n      formNode={\n        <form\n          id='kc-reset-password-form'\n          className={clsx(kcProps.kcFormClass)}\n          action={url.loginAction}\n          method='post'\n        >\n          <div className={clsx(kcProps.kcFormGroupClass)}>\n            <div className={clsx(kcProps.kcLabelWrapperClass)}>\n              <label htmlFor='username' className={clsx(kcProps.kcLabelClass)}>\n                {!realm.loginWithEmailAllowed\n                  ? msg('username')\n                  : !realm.registrationEmailAsUsername\n                  ? msg('usernameOrEmail')\n                  : msg('email')}\n              </label>\n            </div>\n            <div className={clsx(kcProps.kcInputWrapperClass)}>\n              <input\n                type='text'\n                id='username'\n                name='username'\n                className={clsx(kcProps.kcInputClass)}\n                autoFocus\n                defaultValue={\n                  auth !== undefined && auth.showUsername ? auth.attemptedUsername : undefined\n                }\n              />\n            </div>\n          </div>\n          <div className={clsx(kcProps.kcFormGroupClass, kcProps.kcFormSettingClass)}>\n            <div id='kc-form-buttons' className={clsx(kcProps.kcFormButtonsClass)}>\n              <input\n                className={clsx(\n                  kcProps.kcButtonClass,\n                  kcProps.kcButtonPrimaryClass,\n                  kcProps.kcButtonBlockClass,\n                  kcProps.kcButtonLargeClass\n                )}\n                type='submit'\n                value={msgStr('doSubmit')}\n              />\n              <div\n                style={{\n                  width: '100%',\n                  height: '1px',\n                  background: 'rgba(0, 0, 0, 0.1)',\n                  margin: '2rem 0 1.5rem 0',\n                }}\n              />\n              <div id='kc-form-options' className={clsx(kcProps.kcFormOptionsClass)}>\n                <div className={clsx(kcProps.kcFormOptionsWrapperClass)}>\n                  <span\n                    style={{\n                      display: 'flex',\n                      color: '#333333',\n                      fontSize: '1rem',\n                      fontWeight: 500,\n                    }}\n                  >\n                    Já possui uma conta? {'  '} <a href={url.loginUrl}> {msg('backToLogin')}</a>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      }\n      infoNode={msg('emailInstruction')}\n    />\n  )\n})\n\nexport default LoginResetPassword\n","import type { KcContextBase, KcTemplateProps } from 'keycloakify'\nimport { pathJoin } from 'keycloakify/bin/tools/pathJoin'\nimport { assert } from 'keycloakify/lib/tools/assert'\nimport { clsx } from 'keycloakify/lib/tools/clsx'\nimport { headInsert } from 'keycloakify/lib/tools/headInsert'\nimport { useCallbackFactory } from 'powerhooks/useCallbackFactory'\nimport { useConstCallback } from 'powerhooks/useConstCallback'\nimport type { ReactNode } from 'react'\nimport { memo, useEffect, useReducer } from 'react'\nimport type { I18n } from '../../i18n'\n\nimport LogoApp from '../../../assets/teste-logo.png'\n\nexport type TemplateProps = {\n  displayInfo?: boolean\n  displayMessage?: boolean\n  displayRequiredFields?: boolean\n  displayWide?: boolean\n  showAnotherWayIfPresent?: boolean\n  headerNode: ReactNode\n  showUsernameNode?: ReactNode\n  formNode: ReactNode\n  infoNode?: ReactNode\n  /** If you write your own page you probably want\n   * to avoid pulling the default theme assets.\n   */\n  doFetchDefaultThemeResources: boolean\n} & { kcContext: KcContextBase; i18n: I18n } & KcTemplateProps\n\nconst Template = memo((props: TemplateProps) => {\n  const {\n    displayInfo = false,\n    displayMessage = true,\n    displayRequiredFields = false,\n    displayWide = false,\n    showAnotherWayIfPresent = true,\n    headerNode,\n    showUsernameNode = null,\n    formNode,\n    infoNode = null,\n    kcContext,\n    i18n,\n    doFetchDefaultThemeResources,\n  } = props\n\n  const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n\n\n  const onChangeLanguageClickFactory = useCallbackFactory(([kcLanguageTag]: [string]) =>\n    changeLocale(kcLanguageTag)\n  )\n\n  const onTryAnotherWayClick = useConstCallback(\n    () => (document.forms['kc-select-try-another-way-form' as never].submit(), false)\n  )\n\n  const { realm, locale, auth, url, message, isAppInitiatedAction } = kcContext\n\n  const [isExtraCssLoaded, setExtraCssLoaded] = useReducer(() => true, false)\n\n  useEffect(() => {\n    if (!doFetchDefaultThemeResources) {\n      setExtraCssLoaded()\n      return\n    }\n\n    let isUnmounted = false\n    const cleanups: (() => void)[] = []\n\n    const toArr = (x: string | readonly string[] | undefined) =>\n      typeof x === 'string' ? x.split(' ') : x ?? []\n\n    Promise.all(\n      [\n        ...toArr(props.stylesCommon).map(relativePath =>\n          pathJoin(url.resourcesCommonPath, relativePath)\n        ),\n        ...toArr(props.styles).map(relativePath => pathJoin(url.resourcesPath, relativePath)),\n      ]\n        .reverse()\n        .map(href =>\n          headInsert({\n            type: 'css',\n            href,\n            position: 'prepend',\n          })\n        )\n    ).then(() => {\n      if (isUnmounted) {\n        return\n      }\n\n      setExtraCssLoaded()\n    })\n\n    toArr(props.scripts).forEach(relativePath =>\n      headInsert({\n        type: 'javascript',\n        src: pathJoin(url.resourcesPath, relativePath),\n      })\n    )\n\n    if (props.kcHtmlClass !== undefined) {\n      const htmlClassList = document.getElementsByTagName('html')[0].classList\n\n      const tokens = clsx(props.kcHtmlClass).split(' ')\n\n      htmlClassList.add(...tokens)\n\n      cleanups.push(() => htmlClassList.remove(...tokens))\n    }\n\n    return () => {\n      isUnmounted = true\n\n      cleanups.forEach(f => f())\n    }\n  }, [props.kcHtmlClass])\n\n  if (!isExtraCssLoaded) {\n    return null\n  }\n\n  return (\n    <div className={clsx(props.kcLoginClass)}>\n      <div id='kc-header' className={clsx(props.kcHeaderClass)}>\n        <div id='kc-header-wrapper' className={clsx(props.kcHeaderWrapperClass)}>\n          <img src={LogoApp} alt='Logo App' />\n        </div>\n      </div>\n\n      <div className={clsx(props.kcFormCardClass, displayWide && props.kcFormCardAccountClass)}>\n        <header className={clsx(props.kcFormHeaderClass)}>\n          {realm.internationalizationEnabled &&\n            (assert(locale !== undefined), true) &&\n            locale.supported.length > 1 && (\n              <div id='kc-locale'>\n                <div id='kc-locale-wrapper' className={clsx(props.kcLocaleWrapperClass)}>\n                  <div className='kc-dropdown' id='kc-locale-dropdown'>\n                    <a href='#' id='kc-current-locale-link'>\n                      {labelBySupportedLanguageTag[currentLanguageTag]}\n                    </a>\n                    <ul>\n                      {locale.supported.map(({ languageTag }) => (\n                        <li key={languageTag} className='kc-dropdown-item'>\n                          <a href='#' onClick={onChangeLanguageClickFactory(languageTag)}>\n                            {labelBySupportedLanguageTag[languageTag]}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            )}\n          {!(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (\n            displayRequiredFields ? (\n              <div className={clsx(props.kcContentWrapperClass)}>\n                <div className={clsx(props.kcLabelWrapperClass, 'subtitle')}>\n                  <span className='subtitle'>\n                    <span className='required'>*</span>\n                    {msg('requiredFields')}\n                  </span>\n                </div>\n                <div className='col-md-10'>\n                  <h1 id='kc-page-title'>{headerNode}</h1>\n                </div>\n              </div>\n            ) : (\n              <h1 id='kc-page-title'>{headerNode}</h1>\n            )\n          ) : displayRequiredFields ? (\n            <div className={clsx(props.kcContentWrapperClass)}>\n              <div className={clsx(props.kcLabelWrapperClass, 'subtitle')}>\n                <span className='subtitle'>\n                  <span className='required'>*</span> {msg('requiredFields')}\n                </span>\n              </div>\n              <div className='col-md-10'>\n                {showUsernameNode}\n                <div className={clsx(props.kcFormGroupClass)}>\n                  <div id='kc-username'>\n                    <label id='kc-attempted-username'>{auth?.attemptedUsername}</label>\n                    <a id='reset-login' href={url.loginRestartFlowUrl}>\n                      <div className='kc-login-tooltip'>\n                        <i className={clsx(props.kcResetFlowIcon)}></i>\n                        <span className='kc-tooltip-text'>{msg('restartLoginTooltip')}</span>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <>\n              {showUsernameNode}\n              <div className={clsx(props.kcFormGroupClass)}>\n                <div id='kc-username'>\n                  <label id='kc-attempted-username'>{auth?.attemptedUsername}</label>\n                  <a id='reset-login' href={url.loginRestartFlowUrl}>\n                    <div className='kc-login-tooltip'>\n                      <i className={clsx(props.kcResetFlowIcon)}></i>\n                      <span className='kc-tooltip-text'>{msg('restartLoginTooltip')}</span>\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </>\n          )}\n        </header>\n        <div id='kc-content'>\n          <div id='kc-content-wrapper'>\n            {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n            {displayMessage &&\n              message !== undefined &&\n              (message.type !== 'warning' || !isAppInitiatedAction) && (\n                <div className={clsx('alert', `alert-${message.type}`)}>\n                  {message.type === 'success' && (\n                    <span\n                      className={clsx(props.kcFeedbackSuccessIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'warning' && (\n                    <span\n                      className={clsx(props.kcFeedbackWarningIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'error' && (\n                    <span\n                      className={clsx(props.kcFeedbackErrorIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'info' && (\n                    <span\n                      className={clsx(props.kcFeedbackInfoIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  <span\n                    className='kc-feedback-text'\n                    style={{ background: 'none' }}\n                    dangerouslySetInnerHTML={{\n                      __html: message.summary,\n                    }}\n                  />\n                </div>\n              )}\n            {formNode}\n            {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\n              <form\n                id='kc-select-try-another-way-form'\n                action={url.loginAction}\n                method='post'\n                className={clsx(displayWide && props.kcContentWrapperClass)}\n              >\n                <div\n                  className={clsx(\n                    displayWide && [\n                      props.kcFormSocialAccountContentClass,\n                      props.kcFormSocialAccountClass,\n                    ]\n                  )}\n                >\n                  <div className={clsx(props.kcFormGroupClass)}>\n                    <input type='hidden' name='tryAnotherWay' value='on' />\n                    <a href='#' id='try-another-way' onClick={onTryAnotherWayClick}>\n                      {msg('doTryAnotherWay')}\n                    </a>\n                  </div>\n                </div>\n              </form>\n            )}\n            {displayInfo && (\n              <div id='kc-info' className={clsx(props.kcSignUpClass)}>\n                <div id='kc-info-wrapper' className={clsx(props.kcInfoAreaWrapperClass)}>\n                  {infoNode}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n})\n\nexport default Template\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["LoginResetPassword","memo","props","kcContext","i18n","doFetchDefaultThemeResources","Template","DefaultTemplate","kcProps","url","realm","auth","msg","msgStr","displayMessage","headerNode","style","color","fontWeight","fontSize","formNode","id","className","clsx","kcFormClass","action","loginAction","method","kcFormGroupClass","kcLabelWrapperClass","htmlFor","kcLabelClass","loginWithEmailAllowed","registrationEmailAsUsername","kcInputWrapperClass","type","name","kcInputClass","autoFocus","defaultValue","undefined","showUsername","attemptedUsername","kcFormSettingClass","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonBlockClass","kcButtonLargeClass","value","width","height","background","margin","kcFormOptionsClass","kcFormOptionsWrapperClass","display","href","loginUrl","infoNode","displayInfo","displayRequiredFields","displayWide","showAnotherWayIfPresent","showUsernameNode","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","onChangeLanguageClickFactory","useCallbackFactory","kcLanguageTag","onTryAnotherWayClick","useConstCallback","document","forms","submit","locale","message","isAppInitiatedAction","useReducer","isExtraCssLoaded","setExtraCssLoaded","useEffect","isUnmounted","cleanups","toArr","x","split","Promise","all","stylesCommon","map","relativePath","pathJoin","resourcesCommonPath","styles","resourcesPath","reverse","headInsert","position","then","scripts","forEach","src","kcHtmlClass","htmlClassList","getElementsByTagName","classList","tokens","add","push","remove","f","kcLoginClass","kcHeaderClass","kcHeaderWrapperClass","LogoApp","alt","kcFormCardClass","kcFormCardAccountClass","kcFormHeaderClass","internationalizationEnabled","assert","supported","length","kcLocaleWrapperClass","languageTag","onClick","showResetCredentials","kcContentWrapperClass","loginRestartFlowUrl","kcResetFlowIcon","kcFeedbackSuccessIcon","kcFeedbackWarningIcon","kcFeedbackErrorIcon","kcFeedbackInfoIcon","dangerouslySetInnerHTML","__html","summary","showTryAnotherWayLink","kcFormSocialAccountContentClass","kcFormSocialAccountClass","kcSignUpClass","kcInfoAreaWrapperClass","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}