{"version":3,"file":"static/js/4852.3b435a23.chunk.js","mappings":"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","sources":["KcApp/KcApp.tsx","KcApp/index.ts","KcApp/i18n/i18n.ts"],"sourcesContent":["import KcAppBase, { defaultKcProps } from 'keycloakify'\nimport { lazy, Suspense } from 'react'\nimport './global/KcApp.css'\nimport { useI18n } from './i18n'\nimport type { KcContext } from './kcContext'\n\nconst Register = lazy(() => import('./screens/register'))\nconst Login = lazy(() => import('./screens/login'))\nconst LoginResetPassword = lazy(() => import('./screens/loginResetPassword'))\nconst LoginUpdatePassword = lazy(() => import('./screens/loginUpdatePassword'))\nconst Error = lazy(() => import('./screens/error'))\nconst IdpReviewUserProfile = lazy(() => import('./screens/idpReviewUserProfile'))\nconst Info = lazy(() => import('./screens/info'))\nconst LoginConfigTotp = lazy(() => import('./screens/loginConfigTotp'))\nconst LoginIdpLinkConfirm = lazy(() => import('./screens/loginIdpLinkConfirm'))\nconst LoginIdpLinkEmail = lazy(() => import('./screens/loginIdpLinkEmail'))\nconst LoginOtp = lazy(() => import('./screens/loginOtp'))\nconst LoginPageExpired = lazy(() => import('./screens/loginPageExpired'))\nconst LoginPassword = lazy(() => import('./screens/loginPassword'))\nconst LoginUpdateProfile = lazy(() => import('./screens/loginUpdateProfile'))\nconst LoginUsername = lazy(() => import('./screens/loginUsername'))\nconst LoginVerifyEmail = lazy(() => import('./screens/loginVerifyEmail'))\nconst LogoutConfirm = lazy(() => import('./screens/logoutConfirm'))\nconst RegisterUserProfile = lazy(() => import('./screens/registerUserProfile'))\nconst UpdateUserProfile = lazy(() => import('./screens/updateUserProfile'))\n\nexport type Props = {\n  kcContext: KcContext\n}\n\nexport default function KcApp({ kcContext }: Props) {\n  const i18n = useI18n({ kcContext })\n\n  //NOTE: Locales not yet downloaded\n  if (i18n === null) {\n    return null\n  }\n\n  const props = {\n    i18n,\n    ...defaultKcProps,\n    // NOTE: The classes are defined in ./KcApp.css\n    kcHtmlClass: 'kc-html',\n    kcHeaderWrapperClass: 'my-color',\n    kcLoginClass: 'login-class',\n    kcInputClass: 'input-class',\n    kcLabelClass: 'label-class',\n    kcButtonClass: 'button-class',\n  }\n\n  return (\n    <Suspense>\n      {(() => {\n        switch (kcContext.pageId) {\n          case 'login.ftl':\n            return <Login {...{ kcContext, ...props }} />\n          case 'register.ftl':\n            return <Register {...{ kcContext, ...props }} />\n          case 'login-reset-password.ftl':\n            return <LoginResetPassword {...{ kcContext, ...props }} />\n          case 'login-update-password.ftl':\n            return <LoginUpdatePassword {...{ kcContext, ...props }} />\n          case 'error.ftl':\n            return <Error {...{ kcContext, ...props }} />\n          case 'idp-review-user-profile.ftl':\n            return <IdpReviewUserProfile {...{ kcContext, ...props }} />\n          case 'info.ftl':\n            return <Info {...{ kcContext, ...props }} />\n          case 'login-config-totp.ftl':\n            return <LoginConfigTotp {...{ kcContext, ...props }} />\n          case 'login-idp-link-confirm.ftl':\n            return <LoginIdpLinkConfirm {...{ kcContext, ...props }} />\n          case 'login-idp-link-email.ftl':\n            return <LoginIdpLinkEmail {...{ kcContext, ...props }} />\n          case 'login-otp.ftl':\n            return <LoginOtp {...{ kcContext, ...props }} />\n          case 'login-page-expired.ftl':\n            return <LoginPageExpired {...{ kcContext, ...props }} />\n          case 'login-password.ftl':\n            return <LoginPassword {...{ kcContext, ...props }} />\n          case 'login-update-profile.ftl':\n            return <LoginUpdateProfile {...{ kcContext, ...props }} />\n          case 'login-username.ftl':\n            return <LoginUsername {...{ kcContext, ...props }} />\n          case 'login-verify-email.ftl':\n            return <LoginVerifyEmail {...{ kcContext, ...props }} />\n          case 'logout-confirm.ftl':\n            return <LogoutConfirm {...{ kcContext, ...props }} />\n          case 'register-user-profile.ftl':\n            return <RegisterUserProfile {...{ kcContext, ...props }} />\n          case 'update-user-profile.ftl':\n            return <UpdateUserProfile {...{ kcContext, ...props }} />\n          default:\n            return <KcAppBase {...{ kcContext, ...props }} />\n        }\n      })()}\n    </Suspense>\n  )\n}\n","import KcApp from \"./KcApp\";\nexport * from \"./KcApp\";\nexport default KcApp;\n","import { useI18n as useI18nBase } from 'keycloakify'\n\ntype Props = Omit<Parameters<typeof useI18nBase>[0], 'extraMessages'>\n\nexport const fallbackLanguageTag = 'en'\n\nexport function useI18n(props: Props) {\n  const { kcContext } = props\n  return useI18nBase({\n    kcContext,\n    extraMessages: {\n      en: {\n        alphanumericalCharsOnly: 'Only alphanumerical characters',\n        gender: 'Gender',\n        // Here we overwrite the default english value for the message \"doForgotPassword\"\n        // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\n        doForgotPassword: 'I forgot my password',\n      },\n      fr: {\n        /* spell-checker: disable */\n        alphanumericalCharsOnly: 'Caractère alphanumérique uniquement',\n        gender: 'Genre',\n        doForgotPassword: \"J'ai oublié mon mot de passe\",\n        /* spell-checker: enable */\n      },\n    },\n  })\n}\n\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>\n"],"names":["Register","lazy","Login","LoginResetPassword","LoginUpdatePassword","Error","IdpReviewUserProfile","Info","LoginConfigTotp","LoginIdpLinkConfirm","LoginIdpLinkEmail","LoginOtp","LoginPageExpired","LoginPassword","LoginUpdateProfile","LoginUsername","LoginVerifyEmail","LogoutConfirm","RegisterUserProfile","UpdateUserProfile","kcContext","i18n","props","useI18nBase","extraMessages","en","alphanumericalCharsOnly","gender","doForgotPassword","fr","useI18n","defaultKcProps","kcHtmlClass","kcHeaderWrapperClass","kcLoginClass","kcInputClass","kcLabelClass","kcButtonClass","Suspense","pageId"],"sourceRoot":""}