{"version":3,"file":"static/js/8134.f598e9b9.chunk.js","mappings":"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","sources":["KcApp/screens/loginConfigTotp/index.tsx","KcApp/screens/template/index.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React, { memo } from 'react'\nimport DefaultTemplate from '../template'\nimport type { TemplateProps } from '../template'\nimport type { KcProps } from 'keycloakify'\nimport type { KcContextBase } from 'keycloakify'\nimport { clsx } from 'keycloakify/lib/tools/clsx'\nimport type { I18n } from '../../i18n'\n\nexport type LoginConfigTotpProps = KcProps & {\n  kcContext: KcContextBase.LoginConfigTotp\n  i18n: I18n\n  doFetchDefaultThemeResources?: boolean\n  Template?: (props: TemplateProps) => JSX.Element | null\n}\n\nconst LoginConfigTotp = memo((props: LoginConfigTotpProps) => {\n  const {\n    kcContext,\n    i18n,\n    doFetchDefaultThemeResources = true,\n    Template = DefaultTemplate,\n    ...kcProps\n  } = props\n\n  const { url, isAppInitiatedAction, totp, mode, messagesPerField } = kcContext\n\n  const { msg, msgStr } = i18n\n\n  const algToKeyUriAlg: Record<\n    KcContextBase.LoginConfigTotp['totp']['policy']['algorithm'],\n    string\n  > = {\n    HmacSHA1: 'SHA1',\n    HmacSHA256: 'SHA256',\n    HmacSHA512: 'SHA512',\n  }\n\n  return (\n    <Template\n      {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n      headerNode={msg('loginTotpTitle')}\n      formNode={\n        <>\n          <ol id='kc-totp-settings'>\n            <li>\n              <p>{msg('loginTotpStep1')}</p>\n\n              <ul id='kc-totp-supported-apps'>\n                {totp.policy.supportedApplications.map(app => (\n                  <li>{app}</li>\n                ))}\n              </ul>\n            </li>\n\n            {mode && mode == 'manual' ? (\n              <>\n                <li>\n                  <p>{msg('loginTotpManualStep2')}</p>\n                  <p>\n                    <span id='kc-totp-secret-key'>{totp.totpSecretEncoded}</span>\n                  </p>\n                  <p>\n                    <a href={totp.qrUrl} id='mode-barcode'>\n                      {msg('loginTotpScanBarcode')}\n                    </a>\n                  </p>\n                </li>\n                <li>\n                  <p>{msg('loginTotpManualStep3')}</p>\n                  <p>\n                    <ul>\n                      <li id='kc-totp-type'>\n                        {msg('loginTotpType')}: {msg(`loginTotp.${totp.policy.type}`)}\n                      </li>\n                      <li id='kc-totp-algorithm'>\n                        {msg('loginTotpAlgorithm')}:{' '}\n                        {algToKeyUriAlg?.[totp.policy.algorithm] ?? totp.policy.algorithm}\n                      </li>\n                      <li id='kc-totp-digits'>\n                        {msg('loginTotpDigits')}: {totp.policy.digits}\n                      </li>\n                      {totp.policy.type === 'totp' ? (\n                        <li id='kc-totp-period'>\n                          {msg('loginTotpInterval')}: {totp.policy.period}\n                        </li>\n                      ) : (\n                        <li id='kc-totp-counter'>\n                          {msg('loginTotpCounter')}: {totp.policy.initialCounter}\n                        </li>\n                      )}\n                    </ul>\n                  </p>\n                </li>\n              </>\n            ) : (\n              <li>\n                <p>{msg('loginTotpStep2')}</p>\n                <img\n                  id='kc-totp-secret-qr-code'\n                  src={`data:image/png;base64, ${totp.totpSecretQrCode}`}\n                  alt='Figure: Barcode'\n                />\n                <br />\n                <p>\n                  <a href={totp.manualUrl} id='mode-manual'>\n                    {msg('loginTotpUnableToScan')}\n                  </a>\n                </p>\n              </li>\n            )}\n            <li>\n              <p>{msg('loginTotpStep3')}</p>\n              <p>{msg('loginTotpStep3DeviceName')}</p>\n            </li>\n          </ol>\n\n          <form\n            action={url.loginAction}\n            className={clsx(kcProps.kcFormClass)}\n            id='kc-totp-settings-form'\n            method='post'\n          >\n            <div className={clsx(kcProps.kcFormGroupClass)}>\n              <div className={clsx(kcProps.kcInputWrapperClass)}>\n                <label htmlFor='totp' className={clsx(kcProps.kcLabelClass)}>\n                  {msg('authenticatorCode')}\n                </label>{' '}\n                <span className='required'>*</span>\n              </div>\n              <div className={clsx(kcProps.kcInputWrapperClass)}>\n                <input\n                  type='text'\n                  id='totp'\n                  name='totp'\n                  autoComplete='off'\n                  className={clsx(kcProps.kcInputClass)}\n                  aria-invalid={messagesPerField.existsError('totp')}\n                />\n\n                {messagesPerField.existsError('totp') && (\n                  <span\n                    id='input-error-otp-code'\n                    className={clsx(kcProps.kcInputErrorMessageClass)}\n                    aria-live='polite'\n                  >\n                    {messagesPerField.get('totp')}\n                  </span>\n                )}\n              </div>\n              <input type='hidden' id='totpSecret' name='totpSecret' value={totp.totpSecret} />\n              {mode && <input type='hidden' id='mode' value={mode} />}\n            </div>\n\n            <div className={clsx(kcProps.kcFormGroupClass)}>\n              <div className={clsx(kcProps.kcInputWrapperClass)}>\n                <label htmlFor='userLabel' className={clsx(kcProps.kcLabelClass)}>\n                  {msg('loginTotpDeviceName')}\n                </label>{' '}\n                {totp.otpCredentials.length >= 1 && <span className='required'>*</span>}\n              </div>\n              <div className={clsx(kcProps.kcInputWrapperClass)}>\n                <input\n                  type='text'\n                  id='userLabel'\n                  name='userLabel'\n                  autoComplete='off'\n                  className={clsx(kcProps.kcInputClass)}\n                  aria-invalid={messagesPerField.existsError('userLabel')}\n                />\n                {messagesPerField.existsError('userLabel') && (\n                  <span\n                    id='input-error-otp-label'\n                    className={clsx(kcProps.kcInputErrorMessageClass)}\n                    aria-live='polite'\n                  >\n                    {messagesPerField.get('userLabel')}\n                  </span>\n                )}\n              </div>\n            </div>\n\n            {isAppInitiatedAction ? (\n              <>\n                <input\n                  type='submit'\n                  className={clsx(\n                    kcProps.kcButtonClass,\n                    kcProps.kcButtonPrimaryClass,\n                    kcProps.kcButtonLargeClass\n                  )}\n                  id='saveTOTPBtn'\n                  value={msgStr('doSubmit')}\n                />\n                <button\n                  type='submit'\n                  className={clsx(\n                    kcProps.kcButtonClass,\n                    kcProps.kcButtonDefaultClass,\n                    kcProps.kcButtonLargeClass,\n                    kcProps.kcButtonLargeClass\n                  )}\n                  id='cancelTOTPBtn'\n                  name='cancel-aia'\n                  value='true'\n                >\n                  ${msg('doCancel')}\n                </button>\n              </>\n            ) : (\n              <input\n                type='submit'\n                className={clsx(\n                  kcProps.kcButtonClass,\n                  kcProps.kcButtonPrimaryClass,\n                  kcProps.kcButtonLargeClass\n                )}\n                id='saveTOTPBtn'\n                value={msgStr('doSubmit')}\n              />\n            )}\n          </form>\n        </>\n      }\n    />\n  )\n})\n\nexport default LoginConfigTotp\n","import type { KcContextBase, KcTemplateProps } from 'keycloakify'\nimport { pathJoin } from 'keycloakify/bin/tools/pathJoin'\nimport { assert } from 'keycloakify/lib/tools/assert'\nimport { clsx } from 'keycloakify/lib/tools/clsx'\nimport { headInsert } from 'keycloakify/lib/tools/headInsert'\nimport { useCallbackFactory } from 'powerhooks/useCallbackFactory'\nimport { useConstCallback } from 'powerhooks/useConstCallback'\nimport type { ReactNode } from 'react'\nimport { memo, useEffect, useReducer } from 'react'\nimport type { I18n } from '../../i18n'\n\nimport LogoApp from '../../../assets/teste-logo.png'\n\nexport type TemplateProps = {\n  displayInfo?: boolean\n  displayMessage?: boolean\n  displayRequiredFields?: boolean\n  displayWide?: boolean\n  showAnotherWayIfPresent?: boolean\n  headerNode: ReactNode\n  showUsernameNode?: ReactNode\n  formNode: ReactNode\n  infoNode?: ReactNode\n  /** If you write your own page you probably want\n   * to avoid pulling the default theme assets.\n   */\n  doFetchDefaultThemeResources: boolean\n} & { kcContext: KcContextBase; i18n: I18n } & KcTemplateProps\n\nconst Template = memo((props: TemplateProps) => {\n  const {\n    displayInfo = false,\n    displayMessage = true,\n    displayRequiredFields = false,\n    displayWide = false,\n    showAnotherWayIfPresent = true,\n    headerNode,\n    showUsernameNode = null,\n    formNode,\n    infoNode = null,\n    kcContext,\n    i18n,\n    doFetchDefaultThemeResources,\n  } = props\n\n  const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n\n\n  const onChangeLanguageClickFactory = useCallbackFactory(([kcLanguageTag]: [string]) =>\n    changeLocale(kcLanguageTag)\n  )\n\n  const onTryAnotherWayClick = useConstCallback(\n    () => (document.forms['kc-select-try-another-way-form' as never].submit(), false)\n  )\n\n  const { realm, locale, auth, url, message, isAppInitiatedAction } = kcContext\n\n  const [isExtraCssLoaded, setExtraCssLoaded] = useReducer(() => true, false)\n\n  useEffect(() => {\n    if (!doFetchDefaultThemeResources) {\n      setExtraCssLoaded()\n      return\n    }\n\n    let isUnmounted = false\n    const cleanups: (() => void)[] = []\n\n    const toArr = (x: string | readonly string[] | undefined) =>\n      typeof x === 'string' ? x.split(' ') : x ?? []\n\n    Promise.all(\n      [\n        ...toArr(props.stylesCommon).map(relativePath =>\n          pathJoin(url.resourcesCommonPath, relativePath)\n        ),\n        ...toArr(props.styles).map(relativePath => pathJoin(url.resourcesPath, relativePath)),\n      ]\n        .reverse()\n        .map(href =>\n          headInsert({\n            type: 'css',\n            href,\n            position: 'prepend',\n          })\n        )\n    ).then(() => {\n      if (isUnmounted) {\n        return\n      }\n\n      setExtraCssLoaded()\n    })\n\n    toArr(props.scripts).forEach(relativePath =>\n      headInsert({\n        type: 'javascript',\n        src: pathJoin(url.resourcesPath, relativePath),\n      })\n    )\n\n    if (props.kcHtmlClass !== undefined) {\n      const htmlClassList = document.getElementsByTagName('html')[0].classList\n\n      const tokens = clsx(props.kcHtmlClass).split(' ')\n\n      htmlClassList.add(...tokens)\n\n      cleanups.push(() => htmlClassList.remove(...tokens))\n    }\n\n    return () => {\n      isUnmounted = true\n\n      cleanups.forEach(f => f())\n    }\n  }, [props.kcHtmlClass])\n\n  if (!isExtraCssLoaded) {\n    return null\n  }\n\n  return (\n    <div className={clsx(props.kcLoginClass)}>\n      <div id='kc-header' className={clsx(props.kcHeaderClass)}>\n        <div id='kc-header-wrapper' className={clsx(props.kcHeaderWrapperClass)}>\n          <img src={LogoApp} alt='Logo App' />\n        </div>\n      </div>\n\n      <div className={clsx(props.kcFormCardClass, displayWide && props.kcFormCardAccountClass)}>\n        <header className={clsx(props.kcFormHeaderClass)}>\n          {realm.internationalizationEnabled &&\n            (assert(locale !== undefined), true) &&\n            locale.supported.length > 1 && (\n              <div id='kc-locale'>\n                <div id='kc-locale-wrapper' className={clsx(props.kcLocaleWrapperClass)}>\n                  <div className='kc-dropdown' id='kc-locale-dropdown'>\n                    <a href='#' id='kc-current-locale-link'>\n                      {labelBySupportedLanguageTag[currentLanguageTag]}\n                    </a>\n                    <ul>\n                      {locale.supported.map(({ languageTag }) => (\n                        <li key={languageTag} className='kc-dropdown-item'>\n                          <a href='#' onClick={onChangeLanguageClickFactory(languageTag)}>\n                            {labelBySupportedLanguageTag[languageTag]}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            )}\n          {!(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (\n            displayRequiredFields ? (\n              <div className={clsx(props.kcContentWrapperClass)}>\n                <div className={clsx(props.kcLabelWrapperClass, 'subtitle')}>\n                  <span className='subtitle'>\n                    <span className='required'>*</span>\n                    {msg('requiredFields')}\n                  </span>\n                </div>\n                <div className='col-md-10'>\n                  <h1 id='kc-page-title'>{headerNode}</h1>\n                </div>\n              </div>\n            ) : (\n              <h1 id='kc-page-title'>{headerNode}</h1>\n            )\n          ) : displayRequiredFields ? (\n            <div className={clsx(props.kcContentWrapperClass)}>\n              <div className={clsx(props.kcLabelWrapperClass, 'subtitle')}>\n                <span className='subtitle'>\n                  <span className='required'>*</span> {msg('requiredFields')}\n                </span>\n              </div>\n              <div className='col-md-10'>\n                {showUsernameNode}\n                <div className={clsx(props.kcFormGroupClass)}>\n                  <div id='kc-username'>\n                    <label id='kc-attempted-username'>{auth?.attemptedUsername}</label>\n                    <a id='reset-login' href={url.loginRestartFlowUrl}>\n                      <div className='kc-login-tooltip'>\n                        <i className={clsx(props.kcResetFlowIcon)}></i>\n                        <span className='kc-tooltip-text'>{msg('restartLoginTooltip')}</span>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <>\n              {showUsernameNode}\n              <div className={clsx(props.kcFormGroupClass)}>\n                <div id='kc-username'>\n                  <label id='kc-attempted-username'>{auth?.attemptedUsername}</label>\n                  <a id='reset-login' href={url.loginRestartFlowUrl}>\n                    <div className='kc-login-tooltip'>\n                      <i className={clsx(props.kcResetFlowIcon)}></i>\n                      <span className='kc-tooltip-text'>{msg('restartLoginTooltip')}</span>\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </>\n          )}\n        </header>\n        <div id='kc-content'>\n          <div id='kc-content-wrapper'>\n            {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n            {displayMessage &&\n              message !== undefined &&\n              (message.type !== 'warning' || !isAppInitiatedAction) && (\n                <div className={clsx('alert', `alert-${message.type}`)}>\n                  {message.type === 'success' && (\n                    <span\n                      className={clsx(props.kcFeedbackSuccessIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'warning' && (\n                    <span\n                      className={clsx(props.kcFeedbackWarningIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'error' && (\n                    <span\n                      className={clsx(props.kcFeedbackErrorIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'info' && (\n                    <span\n                      className={clsx(props.kcFeedbackInfoIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  <span\n                    className='kc-feedback-text'\n                    style={{ background: 'none' }}\n                    dangerouslySetInnerHTML={{\n                      __html: message.summary,\n                    }}\n                  />\n                </div>\n              )}\n            {formNode}\n            {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\n              <form\n                id='kc-select-try-another-way-form'\n                action={url.loginAction}\n                method='post'\n                className={clsx(displayWide && props.kcContentWrapperClass)}\n              >\n                <div\n                  className={clsx(\n                    displayWide && [\n                      props.kcFormSocialAccountContentClass,\n                      props.kcFormSocialAccountClass,\n                    ]\n                  )}\n                >\n                  <div className={clsx(props.kcFormGroupClass)}>\n                    <input type='hidden' name='tryAnotherWay' value='on' />\n                    <a href='#' id='try-another-way' onClick={onTryAnotherWayClick}>\n                      {msg('doTryAnotherWay')}\n                    </a>\n                  </div>\n                </div>\n              </form>\n            )}\n            {displayInfo && (\n              <div id='kc-info' className={clsx(props.kcSignUpClass)}>\n                <div id='kc-info-wrapper' className={clsx(props.kcInfoAreaWrapperClass)}>\n                  {infoNode}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n})\n\nexport default Template\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["LoginConfigTotp","memo","props","kcContext","i18n","doFetchDefaultThemeResources","Template","DefaultTemplate","kcProps","url","isAppInitiatedAction","totp","mode","messagesPerField","msg","msgStr","algToKeyUriAlg","HmacSHA1","HmacSHA256","HmacSHA512","headerNode","formNode","id","policy","supportedApplications","map","app","totpSecretEncoded","href","qrUrl","type","algorithm","digits","period","initialCounter","src","totpSecretQrCode","alt","manualUrl","action","loginAction","className","clsx","kcFormClass","method","kcFormGroupClass","kcInputWrapperClass","htmlFor","kcLabelClass","name","autoComplete","kcInputClass","existsError","kcInputErrorMessageClass","get","value","totpSecret","otpCredentials","length","kcButtonClass","kcButtonPrimaryClass","kcButtonLargeClass","kcButtonDefaultClass","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","showUsernameNode","infoNode","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","onChangeLanguageClickFactory","useCallbackFactory","kcLanguageTag","onTryAnotherWayClick","useConstCallback","document","forms","submit","realm","locale","auth","message","useReducer","isExtraCssLoaded","setExtraCssLoaded","useEffect","isUnmounted","cleanups","toArr","x","split","Promise","all","stylesCommon","relativePath","pathJoin","resourcesCommonPath","styles","resourcesPath","reverse","headInsert","position","then","scripts","forEach","undefined","kcHtmlClass","htmlClassList","getElementsByTagName","classList","tokens","add","push","remove","f","kcLoginClass","kcHeaderClass","kcHeaderWrapperClass","LogoApp","kcFormCardClass","kcFormCardAccountClass","kcFormHeaderClass","internationalizationEnabled","assert","supported","kcLocaleWrapperClass","languageTag","onClick","showUsername","showResetCredentials","kcContentWrapperClass","kcLabelWrapperClass","attemptedUsername","loginRestartFlowUrl","kcResetFlowIcon","kcFeedbackSuccessIcon","style","background","kcFeedbackWarningIcon","kcFeedbackErrorIcon","kcFeedbackInfoIcon","dangerouslySetInnerHTML","__html","summary","showTryAnotherWayLink","kcFormSocialAccountContentClass","kcFormSocialAccountClass","kcSignUpClass","kcInfoAreaWrapperClass","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}