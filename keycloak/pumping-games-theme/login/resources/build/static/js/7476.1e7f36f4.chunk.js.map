{"version":3,"file":"static/js/7476.1e7f36f4.chunk.js","mappings":"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","sources":["KcApp/screens/loginIdpLinkConfirm/index.tsx","KcApp/screens/template/index.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React, { memo } from 'react'\nimport DefaultTemplate from '../template'\nimport type { TemplateProps } from '../template'\nimport type { KcProps } from 'keycloakify'\nimport type { KcContextBase } from 'keycloakify'\nimport { clsx } from 'keycloakify/lib/tools/clsx'\nimport type { I18n } from '../../i18n'\n\nexport type LoginIdpLinkConfirmProps = KcProps & {\n  kcContext: KcContextBase.LoginIdpLinkConfirm\n  i18n: I18n\n  doFetchDefaultThemeResources?: boolean\n  Template?: (props: TemplateProps) => JSX.Element | null\n}\n\nconst LoginIdpLinkConfirm = memo((props: LoginIdpLinkConfirmProps) => {\n  const {\n    kcContext,\n    i18n,\n    doFetchDefaultThemeResources = true,\n    Template = DefaultTemplate,\n    ...kcProps\n  } = props\n\n  const { url, idpAlias } = kcContext\n\n  const { msg } = i18n\n\n  return (\n    <Template\n      {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n      headerNode={msg('confirmLinkIdpTitle')}\n      formNode={\n        <form id='kc-register-form' action={url.loginAction} method='post'>\n          <div className={clsx(kcProps.kcFormGroupClass)}>\n            <button\n              type='submit'\n              className={clsx(\n                kcProps.kcButtonClass,\n                kcProps.kcButtonDefaultClass,\n                kcProps.kcButtonBlockClass,\n                kcProps.kcButtonLargeClass\n              )}\n              name='submitAction'\n              id='updateProfile'\n              value='updateProfile'\n            >\n              {msg('confirmLinkIdpReviewProfile')}\n            </button>\n            <button\n              type='submit'\n              className={clsx(\n                kcProps.kcButtonClass,\n                kcProps.kcButtonDefaultClass,\n                kcProps.kcButtonBlockClass,\n                kcProps.kcButtonLargeClass\n              )}\n              name='submitAction'\n              id='linkAccount'\n              value='linkAccount'\n            >\n              {msg('confirmLinkIdpContinue', idpAlias)}\n            </button>\n          </div>\n        </form>\n      }\n    />\n  )\n})\n\nexport default LoginIdpLinkConfirm\n","import type { KcContextBase, KcTemplateProps } from 'keycloakify'\nimport { pathJoin } from 'keycloakify/bin/tools/pathJoin'\nimport { assert } from 'keycloakify/lib/tools/assert'\nimport { clsx } from 'keycloakify/lib/tools/clsx'\nimport { headInsert } from 'keycloakify/lib/tools/headInsert'\nimport { useCallbackFactory } from 'powerhooks/useCallbackFactory'\nimport { useConstCallback } from 'powerhooks/useConstCallback'\nimport type { ReactNode } from 'react'\nimport { memo, useEffect, useReducer } from 'react'\nimport type { I18n } from '../../i18n'\n\nimport LogoApp from '../../../assets/teste-logo.png'\n\nexport type TemplateProps = {\n  displayInfo?: boolean\n  displayMessage?: boolean\n  displayRequiredFields?: boolean\n  displayWide?: boolean\n  showAnotherWayIfPresent?: boolean\n  headerNode: ReactNode\n  showUsernameNode?: ReactNode\n  formNode: ReactNode\n  infoNode?: ReactNode\n  /** If you write your own page you probably want\n   * to avoid pulling the default theme assets.\n   */\n  doFetchDefaultThemeResources: boolean\n} & { kcContext: KcContextBase; i18n: I18n } & KcTemplateProps\n\nconst Template = memo((props: TemplateProps) => {\n  const {\n    displayInfo = false,\n    displayMessage = true,\n    displayRequiredFields = false,\n    displayWide = false,\n    showAnotherWayIfPresent = true,\n    headerNode,\n    showUsernameNode = null,\n    formNode,\n    infoNode = null,\n    kcContext,\n    i18n,\n    doFetchDefaultThemeResources,\n  } = props\n\n  const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n\n\n  const onChangeLanguageClickFactory = useCallbackFactory(([kcLanguageTag]: [string]) =>\n    changeLocale(kcLanguageTag)\n  )\n\n  const onTryAnotherWayClick = useConstCallback(\n    () => (document.forms['kc-select-try-another-way-form' as never].submit(), false)\n  )\n\n  const { realm, locale, auth, url, message, isAppInitiatedAction } = kcContext\n\n  const [isExtraCssLoaded, setExtraCssLoaded] = useReducer(() => true, false)\n\n  useEffect(() => {\n    if (!doFetchDefaultThemeResources) {\n      setExtraCssLoaded()\n      return\n    }\n\n    let isUnmounted = false\n    const cleanups: (() => void)[] = []\n\n    const toArr = (x: string | readonly string[] | undefined) =>\n      typeof x === 'string' ? x.split(' ') : x ?? []\n\n    Promise.all(\n      [\n        ...toArr(props.stylesCommon).map(relativePath =>\n          pathJoin(url.resourcesCommonPath, relativePath)\n        ),\n        ...toArr(props.styles).map(relativePath => pathJoin(url.resourcesPath, relativePath)),\n      ]\n        .reverse()\n        .map(href =>\n          headInsert({\n            type: 'css',\n            href,\n            position: 'prepend',\n          })\n        )\n    ).then(() => {\n      if (isUnmounted) {\n        return\n      }\n\n      setExtraCssLoaded()\n    })\n\n    toArr(props.scripts).forEach(relativePath =>\n      headInsert({\n        type: 'javascript',\n        src: pathJoin(url.resourcesPath, relativePath),\n      })\n    )\n\n    if (props.kcHtmlClass !== undefined) {\n      const htmlClassList = document.getElementsByTagName('html')[0].classList\n\n      const tokens = clsx(props.kcHtmlClass).split(' ')\n\n      htmlClassList.add(...tokens)\n\n      cleanups.push(() => htmlClassList.remove(...tokens))\n    }\n\n    return () => {\n      isUnmounted = true\n\n      cleanups.forEach(f => f())\n    }\n  }, [props.kcHtmlClass])\n\n  if (!isExtraCssLoaded) {\n    return null\n  }\n\n  return (\n    <div className={clsx(props.kcLoginClass)}>\n      <div id='kc-header' className={clsx(props.kcHeaderClass)}>\n        <div id='kc-header-wrapper' className={clsx(props.kcHeaderWrapperClass)}>\n          <img src={LogoApp} alt='Logo App' />\n        </div>\n      </div>\n\n      <div className={clsx(props.kcFormCardClass, displayWide && props.kcFormCardAccountClass)}>\n        <header className={clsx(props.kcFormHeaderClass)}>\n          {realm.internationalizationEnabled &&\n            (assert(locale !== undefined), true) &&\n            locale.supported.length > 1 && (\n              <div id='kc-locale'>\n                <div id='kc-locale-wrapper' className={clsx(props.kcLocaleWrapperClass)}>\n                  <div className='kc-dropdown' id='kc-locale-dropdown'>\n                    <a href='#' id='kc-current-locale-link'>\n                      {labelBySupportedLanguageTag[currentLanguageTag]}\n                    </a>\n                    <ul>\n                      {locale.supported.map(({ languageTag }) => (\n                        <li key={languageTag} className='kc-dropdown-item'>\n                          <a href='#' onClick={onChangeLanguageClickFactory(languageTag)}>\n                            {labelBySupportedLanguageTag[languageTag]}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            )}\n          {!(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (\n            displayRequiredFields ? (\n              <div className={clsx(props.kcContentWrapperClass)}>\n                <div className={clsx(props.kcLabelWrapperClass, 'subtitle')}>\n                  <span className='subtitle'>\n                    <span className='required'>*</span>\n                    {msg('requiredFields')}\n                  </span>\n                </div>\n                <div className='col-md-10'>\n                  <h1 id='kc-page-title'>{headerNode}</h1>\n                </div>\n              </div>\n            ) : (\n              <h1 id='kc-page-title'>{headerNode}</h1>\n            )\n          ) : displayRequiredFields ? (\n            <div className={clsx(props.kcContentWrapperClass)}>\n              <div className={clsx(props.kcLabelWrapperClass, 'subtitle')}>\n                <span className='subtitle'>\n                  <span className='required'>*</span> {msg('requiredFields')}\n                </span>\n              </div>\n              <div className='col-md-10'>\n                {showUsernameNode}\n                <div className={clsx(props.kcFormGroupClass)}>\n                  <div id='kc-username'>\n                    <label id='kc-attempted-username'>{auth?.attemptedUsername}</label>\n                    <a id='reset-login' href={url.loginRestartFlowUrl}>\n                      <div className='kc-login-tooltip'>\n                        <i className={clsx(props.kcResetFlowIcon)}></i>\n                        <span className='kc-tooltip-text'>{msg('restartLoginTooltip')}</span>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <>\n              {showUsernameNode}\n              <div className={clsx(props.kcFormGroupClass)}>\n                <div id='kc-username'>\n                  <label id='kc-attempted-username'>{auth?.attemptedUsername}</label>\n                  <a id='reset-login' href={url.loginRestartFlowUrl}>\n                    <div className='kc-login-tooltip'>\n                      <i className={clsx(props.kcResetFlowIcon)}></i>\n                      <span className='kc-tooltip-text'>{msg('restartLoginTooltip')}</span>\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </>\n          )}\n        </header>\n        <div id='kc-content'>\n          <div id='kc-content-wrapper'>\n            {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n            {displayMessage &&\n              message !== undefined &&\n              (message.type !== 'warning' || !isAppInitiatedAction) && (\n                <div className={clsx('alert', `alert-${message.type}`)}>\n                  {message.type === 'success' && (\n                    <span\n                      className={clsx(props.kcFeedbackSuccessIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'warning' && (\n                    <span\n                      className={clsx(props.kcFeedbackWarningIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'error' && (\n                    <span\n                      className={clsx(props.kcFeedbackErrorIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'info' && (\n                    <span\n                      className={clsx(props.kcFeedbackInfoIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  <span\n                    className='kc-feedback-text'\n                    style={{ background: 'none' }}\n                    dangerouslySetInnerHTML={{\n                      __html: message.summary,\n                    }}\n                  />\n                </div>\n              )}\n            {formNode}\n            {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\n              <form\n                id='kc-select-try-another-way-form'\n                action={url.loginAction}\n                method='post'\n                className={clsx(displayWide && props.kcContentWrapperClass)}\n              >\n                <div\n                  className={clsx(\n                    displayWide && [\n                      props.kcFormSocialAccountContentClass,\n                      props.kcFormSocialAccountClass,\n                    ]\n                  )}\n                >\n                  <div className={clsx(props.kcFormGroupClass)}>\n                    <input type='hidden' name='tryAnotherWay' value='on' />\n                    <a href='#' id='try-another-way' onClick={onTryAnotherWayClick}>\n                      {msg('doTryAnotherWay')}\n                    </a>\n                  </div>\n                </div>\n              </form>\n            )}\n            {displayInfo && (\n              <div id='kc-info' className={clsx(props.kcSignUpClass)}>\n                <div id='kc-info-wrapper' className={clsx(props.kcInfoAreaWrapperClass)}>\n                  {infoNode}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n})\n\nexport default Template\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["LoginIdpLinkConfirm","memo","props","kcContext","i18n","doFetchDefaultThemeResources","Template","DefaultTemplate","kcProps","url","idpAlias","msg","headerNode","formNode","id","action","loginAction","method","className","clsx","kcFormGroupClass","type","kcButtonClass","kcButtonDefaultClass","kcButtonBlockClass","kcButtonLargeClass","name","value","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","showUsernameNode","infoNode","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","onChangeLanguageClickFactory","useCallbackFactory","kcLanguageTag","onTryAnotherWayClick","useConstCallback","document","forms","submit","realm","locale","auth","message","isAppInitiatedAction","useReducer","isExtraCssLoaded","setExtraCssLoaded","useEffect","isUnmounted","cleanups","toArr","x","split","Promise","all","stylesCommon","map","relativePath","pathJoin","resourcesCommonPath","styles","resourcesPath","reverse","href","headInsert","position","then","scripts","forEach","src","undefined","kcHtmlClass","htmlClassList","getElementsByTagName","classList","tokens","add","push","remove","f","kcLoginClass","kcHeaderClass","kcHeaderWrapperClass","LogoApp","alt","kcFormCardClass","kcFormCardAccountClass","kcFormHeaderClass","internationalizationEnabled","assert","supported","length","kcLocaleWrapperClass","languageTag","onClick","showUsername","showResetCredentials","kcContentWrapperClass","kcLabelWrapperClass","attemptedUsername","loginRestartFlowUrl","kcResetFlowIcon","kcFeedbackSuccessIcon","style","background","kcFeedbackWarningIcon","kcFeedbackErrorIcon","kcFeedbackInfoIcon","dangerouslySetInnerHTML","__html","summary","showTryAnotherWayLink","kcFormSocialAccountContentClass","kcFormSocialAccountClass","kcSignUpClass","kcInfoAreaWrapperClass","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}