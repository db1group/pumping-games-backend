{"version":3,"file":"static/js/6841.d0de1988.chunk.js","mappings":"2hBAiBMA,GAAgBC,EAAAA,EAAAA,OAAK,SAACC,G,MAChBC,EAAiGD,EAAjGC,UAAWC,EAAsFF,EAAtFE,KAAnB,EAAyGF,EAAhFG,6BAAAA,OAAzB,WAAyGH,EAA3CI,SAAAA,OAA9D,MAAyEC,EAAAA,EAAzE,EAA6FC,EAAOC,EAAKP,EAAnG,gEAEEQ,EAAsBP,EAAtBO,MAAOC,EAAeR,EAAfQ,IAAKC,EAAUT,EAAVS,MAEZC,EAAgBT,EAAhBS,IAAKC,EAAWV,EAAXU,OAEb,GAA0DC,EAAAA,EAAAA,WAAS,GAAnE,eAAOC,EAAP,KAA8BC,EAA9B,KAEMC,GAAWC,EAAAA,EAAAA,mBAAoD,SAAAC,GACjEA,EAAEC,iBAEFJ,GAAyB,GAELG,EAAEE,OAEVC,QACf,IAED,OACIC,EAAAA,cAAClB,EAAQmB,OAAAA,OAAAA,CAAAA,EAAAA,OAAAA,OAAAA,CACCtB,UAAAA,EAAWC,KAAAA,EAAMC,6BAAAA,GAAiCG,GAAO,CAC/DkB,WAAYb,EAAI,WAChBc,SACIH,EAAAA,cAAAA,MAAAA,CAAKI,GAAG,WACJJ,EAAAA,cAAAA,MAAAA,CAAKI,GAAG,mBACJJ,EAAAA,cAAAA,OAAAA,CAAMI,GAAG,gBAAgBV,SAAUA,EAAUW,OAAQlB,EAAImB,YAAaC,OAAO,QACzEP,EAAAA,cAAAA,MAAAA,CAAKQ,WAAWC,EAAAA,EAAAA,GAAKzB,EAAQ0B,mBACzBV,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,QAAAA,CAAOW,QAAQ,WAAWH,WAAWC,EAAAA,EAAAA,GAAKzB,EAAQ4B,eAC7CvB,EAAI,aAETW,EAAAA,cAAAA,QAAAA,CACIa,SAAU,EACVT,GAAG,WACHI,WAAWC,EAAAA,EAAAA,GAAKzB,EAAQ8B,cACxBC,KAAK,WACLC,KAAK,WACLC,WAAW,EACXC,aAAa,KACbC,aAA4B,QAAd,EAAA/B,EAAMgC,gBAAQC,IAAAA,EAAAA,EAAI,MAGxCrB,EAAAA,cAAAA,MAAAA,CAAKQ,WAAWC,EAAAA,EAAAA,GAAKzB,EAAQ0B,iBAAkB1B,EAAQsC,qBACnDtB,EAAAA,cAAAA,MAAAA,CAAKI,GAAG,oBACRJ,EAAAA,cAAAA,MAAAA,CAAKQ,WAAWC,EAAAA,EAAAA,GAAKzB,EAAQuC,4BACxBrC,EAAMsC,sBACHxB,EAAAA,cAAAA,OAAAA,KACIA,EAAAA,cAAAA,IAAAA,CAAGa,SAAU,EAAGY,KAAMtC,EAAIuC,0BACrBrC,EAAI,wBAMzBW,EAAAA,cAAAA,MAAAA,CAAKI,GAAG,kBAAkBI,WAAWC,EAAAA,EAAAA,GAAKzB,EAAQ0B,mBAC9CV,EAAAA,cAAAA,QAAAA,CACIa,SAAU,EACVL,WAAWC,EAAAA,EAAAA,GACPzB,EAAQ2C,cACR3C,EAAQ4C,qBACR5C,EAAQ6C,mBACR7C,EAAQ8C,oBAEZf,KAAK,QACLX,GAAG,WACHY,KAAK,SACLe,MAAOzC,EAAO,WACd0C,SAAUxC,UAS7C,IAED,W","sources":["../node_modules/keycloakify/src/lib/components/LoginPassword.tsx"],"sourcesContent":["import React, { useState, memo } from \"react\";\nimport DefaultTemplate from \"./Template\";\nimport type { TemplateProps } from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport { clsx } from \"../tools/clsx\";\nimport { useConstCallback } from \"powerhooks/useConstCallback\";\nimport type { FormEventHandler } from \"react\";\nimport type { I18n } from \"../i18n\";\n\nexport type LoginPasswordProps = KcProps & {\n    kcContext: KcContextBase.LoginPassword;\n    i18n: I18n;\n    doFetchDefaultThemeResources?: boolean;\n    Template?: (props: TemplateProps) => JSX.Element | null;\n};\n\nconst LoginPassword = memo((props: LoginPasswordProps) => {\n    const { kcContext, i18n, doFetchDefaultThemeResources = true, Template = DefaultTemplate, ...kcProps } = props;\n\n    const { realm, url, login } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n\n        setIsLoginButtonDisabled(true);\n\n        const formElement = e.target as HTMLFormElement;\n\n        formElement.submit();\n    });\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n            headerNode={msg(\"doLogIn\")}\n            formNode={\n                <div id=\"kc-form\">\n                    <div id=\"kc-form-wrapper\">\n                        <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\">\n                            <div className={clsx(kcProps.kcFormGroupClass)}>\n                                <hr />\n                                <label htmlFor=\"password\" className={clsx(kcProps.kcLabelClass)}>\n                                    {msg(\"password\")}\n                                </label>\n                                <input\n                                    tabIndex={2}\n                                    id=\"password\"\n                                    className={clsx(kcProps.kcInputClass)}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    autoFocus={true}\n                                    autoComplete=\"on\"\n                                    defaultValue={login.password ?? \"\"}\n                                />\n                            </div>\n                            <div className={clsx(kcProps.kcFormGroupClass, kcProps.kcFormSettingClass)}>\n                                <div id=\"kc-form-options\" />\n                                <div className={clsx(kcProps.kcFormOptionsWrapperClass)}>\n                                    {realm.resetPasswordAllowed && (\n                                        <span>\n                                            <a tabIndex={5} href={url.loginResetCredentialsUrl}>\n                                                {msg(\"doForgotPassword\")}\n                                            </a>\n                                        </span>\n                                    )}\n                                </div>\n                            </div>\n                            <div id=\"kc-form-buttons\" className={clsx(kcProps.kcFormGroupClass)}>\n                                <input\n                                    tabIndex={4}\n                                    className={clsx(\n                                        kcProps.kcButtonClass,\n                                        kcProps.kcButtonPrimaryClass,\n                                        kcProps.kcButtonBlockClass,\n                                        kcProps.kcButtonLargeClass\n                                    )}\n                                    name=\"login\"\n                                    id=\"kc-login\"\n                                    type=\"submit\"\n                                    value={msgStr(\"doLogIn\")}\n                                    disabled={isLoginButtonDisabled}\n                                />\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            }\n        />\n    );\n});\n\nexport default LoginPassword;\n"],"names":["LoginPassword","memo","props","kcContext","i18n","doFetchDefaultThemeResources","Template","DefaultTemplate","kcProps","__rest","realm","url","login","msg","msgStr","useState","isLoginButtonDisabled","setIsLoginButtonDisabled","onSubmit","useConstCallback","e","preventDefault","target","submit","React","Object","headerNode","formNode","id","action","loginAction","method","className","clsx","kcFormGroupClass","htmlFor","kcLabelClass","tabIndex","kcInputClass","name","type","autoFocus","autoComplete","defaultValue","password","_a","kcFormSettingClass","kcFormOptionsWrapperClass","resetPasswordAllowed","href","loginResetCredentialsUrl","kcButtonClass","kcButtonPrimaryClass","kcButtonBlockClass","kcButtonLargeClass","value","disabled"],"sourceRoot":""}