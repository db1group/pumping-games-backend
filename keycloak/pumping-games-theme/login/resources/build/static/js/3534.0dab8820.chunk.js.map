{"version":3,"file":"static/js/3534.0dab8820.chunk.js","mappings":"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","sources":["KcApp/screens/loginUpdateProfile/index.tsx","KcApp/screens/template/index.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React, { memo } from 'react'\nimport DefaultTemplate from '../template'\nimport type { TemplateProps } from '../template'\nimport type { KcProps } from 'keycloakify'\nimport type { KcContextBase } from 'keycloakify'\nimport { clsx } from 'keycloakify/lib/tools/clsx'\nimport type { I18n } from '../../i18n'\n\nexport type ILoginUpdateProfile = KcProps & {\n  kcContext: KcContextBase.LoginUpdateProfile\n  i18n: I18n\n  doFetchDefaultThemeResources?: boolean\n  Template?: (props: TemplateProps) => JSX.Element | null\n}\n\nconst LoginUpdateProfile = memo((props: ILoginUpdateProfile) => {\n  const {\n    kcContext,\n    i18n,\n    doFetchDefaultThemeResources = true,\n    Template = DefaultTemplate,\n    ...kcProps\n  } = props\n\n  const { msg, msgStr } = i18n\n\n  const { url, user, messagesPerField, isAppInitiatedAction } = kcContext\n\n  return (\n    <Template\n      {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n      headerNode={msg('loginProfileTitle')}\n      formNode={\n        <form\n          id='kc-update-profile-form'\n          className={clsx(kcProps.kcFormClass)}\n          action={url.loginAction}\n          method='post'\n        >\n          {user.editUsernameAllowed && (\n            <div\n              className={clsx(\n                kcProps.kcFormGroupClass,\n                messagesPerField.printIfExists('username', kcProps.kcFormGroupErrorClass)\n              )}\n            >\n              <div className={clsx(kcProps.kcLabelWrapperClass)}>\n                <label htmlFor='username' className={clsx(kcProps.kcLabelClass)}>\n                  {msg('username')}\n                </label>\n              </div>\n              <div className={clsx(kcProps.kcInputWrapperClass)}>\n                <input\n                  type='text'\n                  id='username'\n                  name='username'\n                  defaultValue={user.username ?? ''}\n                  className={clsx(kcProps.kcInputClass)}\n                />\n              </div>\n            </div>\n          )}\n\n          <div\n            className={clsx(\n              kcProps.kcFormGroupClass,\n              messagesPerField.printIfExists('email', kcProps.kcFormGroupErrorClass)\n            )}\n          >\n            <div className={clsx(kcProps.kcLabelWrapperClass)}>\n              <label htmlFor='email' className={clsx(kcProps.kcLabelClass)}>\n                {msg('email')}\n              </label>\n            </div>\n            <div className={clsx(kcProps.kcInputWrapperClass)}>\n              <input\n                type='text'\n                id='email'\n                name='email'\n                defaultValue={user.email ?? ''}\n                className={clsx(kcProps.kcInputClass)}\n              />\n            </div>\n          </div>\n\n          <div\n            className={clsx(\n              kcProps.kcFormGroupClass,\n              messagesPerField.printIfExists('firstName', kcProps.kcFormGroupErrorClass)\n            )}\n          >\n            <div className={clsx(kcProps.kcLabelWrapperClass)}>\n              <label htmlFor='firstName' className={clsx(kcProps.kcLabelClass)}>\n                {msg('firstName')}\n              </label>\n            </div>\n            <div className={clsx(kcProps.kcInputWrapperClass)}>\n              <input\n                type='text'\n                id='firstName'\n                name='firstName'\n                defaultValue={user.firstName ?? ''}\n                className={clsx(kcProps.kcInputClass)}\n              />\n            </div>\n          </div>\n\n          <div\n            className={clsx(\n              kcProps.kcFormGroupClass,\n              messagesPerField.printIfExists('lastName', kcProps.kcFormGroupErrorClass)\n            )}\n          >\n            <div className={clsx(kcProps.kcLabelWrapperClass)}>\n              <label htmlFor='lastName' className={clsx(kcProps.kcLabelClass)}>\n                {msg('lastName')}\n              </label>\n            </div>\n            <div className={clsx(kcProps.kcInputWrapperClass)}>\n              <input\n                type='text'\n                id='lastName'\n                name='lastName'\n                defaultValue={user.lastName ?? ''}\n                className={clsx(kcProps.kcInputClass)}\n              />\n            </div>\n          </div>\n\n          <div className={clsx(kcProps.kcFormGroupClass)}>\n            <div id='kc-form-options' className={clsx(kcProps.kcFormOptionsClass)}>\n              <div className={clsx(kcProps.kcFormOptionsWrapperClass)} />\n            </div>\n\n            <div id='kc-form-buttons' className={clsx(kcProps.kcFormButtonsClass)}>\n              {isAppInitiatedAction ? (\n                <>\n                  <input\n                    className={clsx(\n                      kcProps.kcButtonClass,\n                      kcProps.kcButtonPrimaryClass,\n                      kcProps.kcButtonLargeClass\n                    )}\n                    type='submit'\n                    defaultValue={msgStr('doSubmit')}\n                  />\n                  <button\n                    className={clsx(\n                      kcProps.kcButtonClass,\n                      kcProps.kcButtonDefaultClass,\n                      kcProps.kcButtonLargeClass\n                    )}\n                    type='submit'\n                    name='cancel-aia'\n                    value='true'\n                  >\n                    {msg('doCancel')}\n                  </button>\n                </>\n              ) : (\n                <input\n                  className={clsx(\n                    kcProps.kcButtonClass,\n                    kcProps.kcButtonPrimaryClass,\n                    kcProps.kcButtonBlockClass,\n                    kcProps.kcButtonLargeClass\n                  )}\n                  type='submit'\n                  defaultValue={msgStr('doSubmit')}\n                />\n              )}\n            </div>\n          </div>\n        </form>\n      }\n    />\n  )\n})\n\nexport default LoginUpdateProfile\n","import type { KcContextBase, KcTemplateProps } from 'keycloakify'\nimport { pathJoin } from 'keycloakify/bin/tools/pathJoin'\nimport { assert } from 'keycloakify/lib/tools/assert'\nimport { clsx } from 'keycloakify/lib/tools/clsx'\nimport { headInsert } from 'keycloakify/lib/tools/headInsert'\nimport { useCallbackFactory } from 'powerhooks/useCallbackFactory'\nimport { useConstCallback } from 'powerhooks/useConstCallback'\nimport type { ReactNode } from 'react'\nimport { memo, useEffect, useReducer } from 'react'\nimport type { I18n } from '../../i18n'\n\nimport LogoApp from '../../../assets/teste-logo.png'\n\nexport type TemplateProps = {\n  displayInfo?: boolean\n  displayMessage?: boolean\n  displayRequiredFields?: boolean\n  displayWide?: boolean\n  showAnotherWayIfPresent?: boolean\n  headerNode: ReactNode\n  showUsernameNode?: ReactNode\n  formNode: ReactNode\n  infoNode?: ReactNode\n  /** If you write your own page you probably want\n   * to avoid pulling the default theme assets.\n   */\n  doFetchDefaultThemeResources: boolean\n} & { kcContext: KcContextBase; i18n: I18n } & KcTemplateProps\n\nconst Template = memo((props: TemplateProps) => {\n  const {\n    displayInfo = false,\n    displayMessage = true,\n    displayRequiredFields = false,\n    displayWide = false,\n    showAnotherWayIfPresent = true,\n    headerNode,\n    showUsernameNode = null,\n    formNode,\n    infoNode = null,\n    kcContext,\n    i18n,\n    doFetchDefaultThemeResources,\n  } = props\n\n  const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n\n\n  const onChangeLanguageClickFactory = useCallbackFactory(([kcLanguageTag]: [string]) =>\n    changeLocale(kcLanguageTag)\n  )\n\n  const onTryAnotherWayClick = useConstCallback(\n    () => (document.forms['kc-select-try-another-way-form' as never].submit(), false)\n  )\n\n  const { realm, locale, auth, url, message, isAppInitiatedAction } = kcContext\n\n  const [isExtraCssLoaded, setExtraCssLoaded] = useReducer(() => true, false)\n\n  useEffect(() => {\n    if (!doFetchDefaultThemeResources) {\n      setExtraCssLoaded()\n      return\n    }\n\n    let isUnmounted = false\n    const cleanups: (() => void)[] = []\n\n    const toArr = (x: string | readonly string[] | undefined) =>\n      typeof x === 'string' ? x.split(' ') : x ?? []\n\n    Promise.all(\n      [\n        ...toArr(props.stylesCommon).map(relativePath =>\n          pathJoin(url.resourcesCommonPath, relativePath)\n        ),\n        ...toArr(props.styles).map(relativePath => pathJoin(url.resourcesPath, relativePath)),\n      ]\n        .reverse()\n        .map(href =>\n          headInsert({\n            type: 'css',\n            href,\n            position: 'prepend',\n          })\n        )\n    ).then(() => {\n      if (isUnmounted) {\n        return\n      }\n\n      setExtraCssLoaded()\n    })\n\n    toArr(props.scripts).forEach(relativePath =>\n      headInsert({\n        type: 'javascript',\n        src: pathJoin(url.resourcesPath, relativePath),\n      })\n    )\n\n    if (props.kcHtmlClass !== undefined) {\n      const htmlClassList = document.getElementsByTagName('html')[0].classList\n\n      const tokens = clsx(props.kcHtmlClass).split(' ')\n\n      htmlClassList.add(...tokens)\n\n      cleanups.push(() => htmlClassList.remove(...tokens))\n    }\n\n    return () => {\n      isUnmounted = true\n\n      cleanups.forEach(f => f())\n    }\n  }, [props.kcHtmlClass])\n\n  if (!isExtraCssLoaded) {\n    return null\n  }\n\n  return (\n    <div className={clsx(props.kcLoginClass)}>\n      <div id='kc-header' className={clsx(props.kcHeaderClass)}>\n        <div id='kc-header-wrapper' className={clsx(props.kcHeaderWrapperClass)}>\n          <img src={LogoApp} alt='Logo App' />\n        </div>\n      </div>\n\n      <div className={clsx(props.kcFormCardClass, displayWide && props.kcFormCardAccountClass)}>\n        <header className={clsx(props.kcFormHeaderClass)}>\n          {realm.internationalizationEnabled &&\n            (assert(locale !== undefined), true) &&\n            locale.supported.length > 1 && (\n              <div id='kc-locale'>\n                <div id='kc-locale-wrapper' className={clsx(props.kcLocaleWrapperClass)}>\n                  <div className='kc-dropdown' id='kc-locale-dropdown'>\n                    <a href='#' id='kc-current-locale-link'>\n                      {labelBySupportedLanguageTag[currentLanguageTag]}\n                    </a>\n                    <ul>\n                      {locale.supported.map(({ languageTag }) => (\n                        <li key={languageTag} className='kc-dropdown-item'>\n                          <a href='#' onClick={onChangeLanguageClickFactory(languageTag)}>\n                            {labelBySupportedLanguageTag[languageTag]}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            )}\n          {!(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (\n            displayRequiredFields ? (\n              <div className={clsx(props.kcContentWrapperClass)}>\n                <div className={clsx(props.kcLabelWrapperClass, 'subtitle')}>\n                  <span className='subtitle'>\n                    <span className='required'>*</span>\n                    {msg('requiredFields')}\n                  </span>\n                </div>\n                <div className='col-md-10'>\n                  <h1 id='kc-page-title'>{headerNode}</h1>\n                </div>\n              </div>\n            ) : (\n              <h1 id='kc-page-title'>{headerNode}</h1>\n            )\n          ) : displayRequiredFields ? (\n            <div className={clsx(props.kcContentWrapperClass)}>\n              <div className={clsx(props.kcLabelWrapperClass, 'subtitle')}>\n                <span className='subtitle'>\n                  <span className='required'>*</span> {msg('requiredFields')}\n                </span>\n              </div>\n              <div className='col-md-10'>\n                {showUsernameNode}\n                <div className={clsx(props.kcFormGroupClass)}>\n                  <div id='kc-username'>\n                    <label id='kc-attempted-username'>{auth?.attemptedUsername}</label>\n                    <a id='reset-login' href={url.loginRestartFlowUrl}>\n                      <div className='kc-login-tooltip'>\n                        <i className={clsx(props.kcResetFlowIcon)}></i>\n                        <span className='kc-tooltip-text'>{msg('restartLoginTooltip')}</span>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <>\n              {showUsernameNode}\n              <div className={clsx(props.kcFormGroupClass)}>\n                <div id='kc-username'>\n                  <label id='kc-attempted-username'>{auth?.attemptedUsername}</label>\n                  <a id='reset-login' href={url.loginRestartFlowUrl}>\n                    <div className='kc-login-tooltip'>\n                      <i className={clsx(props.kcResetFlowIcon)}></i>\n                      <span className='kc-tooltip-text'>{msg('restartLoginTooltip')}</span>\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </>\n          )}\n        </header>\n        <div id='kc-content'>\n          <div id='kc-content-wrapper'>\n            {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n            {displayMessage &&\n              message !== undefined &&\n              (message.type !== 'warning' || !isAppInitiatedAction) && (\n                <div className={clsx('alert', `alert-${message.type}`)}>\n                  {message.type === 'success' && (\n                    <span\n                      className={clsx(props.kcFeedbackSuccessIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'warning' && (\n                    <span\n                      className={clsx(props.kcFeedbackWarningIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'error' && (\n                    <span\n                      className={clsx(props.kcFeedbackErrorIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'info' && (\n                    <span\n                      className={clsx(props.kcFeedbackInfoIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  <span\n                    className='kc-feedback-text'\n                    style={{ background: 'none' }}\n                    dangerouslySetInnerHTML={{\n                      __html: message.summary,\n                    }}\n                  />\n                </div>\n              )}\n            {formNode}\n            {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\n              <form\n                id='kc-select-try-another-way-form'\n                action={url.loginAction}\n                method='post'\n                className={clsx(displayWide && props.kcContentWrapperClass)}\n              >\n                <div\n                  className={clsx(\n                    displayWide && [\n                      props.kcFormSocialAccountContentClass,\n                      props.kcFormSocialAccountClass,\n                    ]\n                  )}\n                >\n                  <div className={clsx(props.kcFormGroupClass)}>\n                    <input type='hidden' name='tryAnotherWay' value='on' />\n                    <a href='#' id='try-another-way' onClick={onTryAnotherWayClick}>\n                      {msg('doTryAnotherWay')}\n                    </a>\n                  </div>\n                </div>\n              </form>\n            )}\n            {displayInfo && (\n              <div id='kc-info' className={clsx(props.kcSignUpClass)}>\n                <div id='kc-info-wrapper' className={clsx(props.kcInfoAreaWrapperClass)}>\n                  {infoNode}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n})\n\nexport default Template\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["LoginUpdateProfile","memo","props","kcContext","i18n","doFetchDefaultThemeResources","Template","DefaultTemplate","kcProps","msg","msgStr","url","user","messagesPerField","isAppInitiatedAction","headerNode","formNode","id","className","clsx","kcFormClass","action","loginAction","method","editUsernameAllowed","kcFormGroupClass","printIfExists","kcFormGroupErrorClass","kcLabelWrapperClass","htmlFor","kcLabelClass","kcInputWrapperClass","type","name","defaultValue","username","kcInputClass","email","firstName","lastName","kcFormOptionsClass","kcFormOptionsWrapperClass","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonLargeClass","kcButtonDefaultClass","value","kcButtonBlockClass","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","showUsernameNode","infoNode","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","onChangeLanguageClickFactory","useCallbackFactory","kcLanguageTag","onTryAnotherWayClick","useConstCallback","document","forms","submit","realm","locale","auth","message","useReducer","isExtraCssLoaded","setExtraCssLoaded","useEffect","isUnmounted","cleanups","toArr","x","split","Promise","all","stylesCommon","map","relativePath","pathJoin","resourcesCommonPath","styles","resourcesPath","reverse","href","headInsert","position","then","scripts","forEach","src","undefined","kcHtmlClass","htmlClassList","getElementsByTagName","classList","tokens","add","push","remove","f","kcLoginClass","kcHeaderClass","kcHeaderWrapperClass","LogoApp","alt","kcFormCardClass","kcFormCardAccountClass","kcFormHeaderClass","internationalizationEnabled","assert","supported","length","kcLocaleWrapperClass","languageTag","onClick","showUsername","showResetCredentials","kcContentWrapperClass","attemptedUsername","loginRestartFlowUrl","kcResetFlowIcon","kcFeedbackSuccessIcon","style","background","kcFeedbackWarningIcon","kcFeedbackErrorIcon","kcFeedbackInfoIcon","dangerouslySetInnerHTML","__html","summary","showTryAnotherWayLink","kcFormSocialAccountContentClass","kcFormSocialAccountClass","kcSignUpClass","kcInfoAreaWrapperClass","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}