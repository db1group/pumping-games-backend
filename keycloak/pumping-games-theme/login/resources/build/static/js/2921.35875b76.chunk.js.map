{"version":3,"file":"static/js/2921.35875b76.chunk.js","mappings":"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","sources":["KcApp/screens/loginPassword/index.tsx","KcApp/screens/template/index.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React, { useState, memo } from 'react'\nimport DefaultTemplate from '../template'\nimport type { TemplateProps } from '../template'\nimport type { KcProps } from 'keycloakify'\nimport type { KcContextBase } from 'keycloakify'\nimport { clsx } from 'keycloakify/lib/tools/clsx'\nimport { useConstCallback } from 'powerhooks/useConstCallback'\nimport type { FormEventHandler } from 'react'\nimport type { I18n } from '../../i18n'\n\nexport type LoginPasswordProps = KcProps & {\n  kcContext: KcContextBase.LoginPassword\n  i18n: I18n\n  doFetchDefaultThemeResources?: boolean\n  Template?: (props: TemplateProps) => JSX.Element | null\n}\n\nconst LoginPassword = memo((props: LoginPasswordProps) => {\n  const {\n    kcContext,\n    i18n,\n    doFetchDefaultThemeResources = true,\n    Template = DefaultTemplate,\n    ...kcProps\n  } = props\n\n  const { realm, url, login } = kcContext\n\n  const { msg, msgStr } = i18n\n\n  const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false)\n\n  const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n    e.preventDefault()\n\n    setIsLoginButtonDisabled(true)\n\n    const formElement = e.target as HTMLFormElement\n\n    formElement.submit()\n  })\n\n  return (\n    <Template\n      {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n      headerNode={msg('doLogIn')}\n      formNode={\n        <div id='kc-form'>\n          <div id='kc-form-wrapper'>\n            <form id='kc-form-login' onSubmit={onSubmit} action={url.loginAction} method='post'>\n              <div className={clsx(kcProps.kcFormGroupClass)}>\n                <hr />\n                <label htmlFor='password' className={clsx(kcProps.kcLabelClass)}>\n                  {msg('password')}\n                </label>\n                <input\n                  tabIndex={2}\n                  id='password'\n                  className={clsx(kcProps.kcInputClass)}\n                  name='password'\n                  type='password'\n                  autoFocus={true}\n                  autoComplete='on'\n                  defaultValue={login.password ?? ''}\n                />\n              </div>\n              <div className={clsx(kcProps.kcFormGroupClass, kcProps.kcFormSettingClass)}>\n                <div id='kc-form-options' />\n                <div className={clsx(kcProps.kcFormOptionsWrapperClass)}>\n                  {realm.resetPasswordAllowed && (\n                    <span>\n                      <a tabIndex={5} href={url.loginResetCredentialsUrl}>\n                        {msg('doForgotPassword')}\n                      </a>\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div id='kc-form-buttons' className={clsx(kcProps.kcFormGroupClass)}>\n                <input\n                  tabIndex={4}\n                  className={clsx(\n                    kcProps.kcButtonClass,\n                    kcProps.kcButtonPrimaryClass,\n                    kcProps.kcButtonBlockClass,\n                    kcProps.kcButtonLargeClass\n                  )}\n                  name='login'\n                  id='kc-login'\n                  type='submit'\n                  value={msgStr('doLogIn')}\n                  disabled={isLoginButtonDisabled}\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      }\n    />\n  )\n})\n\nexport default LoginPassword\n","import type { KcContextBase, KcTemplateProps } from 'keycloakify'\nimport { pathJoin } from 'keycloakify/bin/tools/pathJoin'\nimport { assert } from 'keycloakify/lib/tools/assert'\nimport { clsx } from 'keycloakify/lib/tools/clsx'\nimport { headInsert } from 'keycloakify/lib/tools/headInsert'\nimport { useCallbackFactory } from 'powerhooks/useCallbackFactory'\nimport { useConstCallback } from 'powerhooks/useConstCallback'\nimport type { ReactNode } from 'react'\nimport { memo, useEffect, useReducer } from 'react'\nimport type { I18n } from '../../i18n'\n\nimport LogoApp from '../../../assets/teste-logo.png'\n\nexport type TemplateProps = {\n  displayInfo?: boolean\n  displayMessage?: boolean\n  displayRequiredFields?: boolean\n  displayWide?: boolean\n  showAnotherWayIfPresent?: boolean\n  headerNode: ReactNode\n  showUsernameNode?: ReactNode\n  formNode: ReactNode\n  infoNode?: ReactNode\n  /** If you write your own page you probably want\n   * to avoid pulling the default theme assets.\n   */\n  doFetchDefaultThemeResources: boolean\n} & { kcContext: KcContextBase; i18n: I18n } & KcTemplateProps\n\nconst Template = memo((props: TemplateProps) => {\n  const {\n    displayInfo = false,\n    displayMessage = true,\n    displayRequiredFields = false,\n    displayWide = false,\n    showAnotherWayIfPresent = true,\n    headerNode,\n    showUsernameNode = null,\n    formNode,\n    infoNode = null,\n    kcContext,\n    i18n,\n    doFetchDefaultThemeResources,\n  } = props\n\n  const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n\n\n  const onChangeLanguageClickFactory = useCallbackFactory(([kcLanguageTag]: [string]) =>\n    changeLocale(kcLanguageTag)\n  )\n\n  const onTryAnotherWayClick = useConstCallback(\n    () => (document.forms['kc-select-try-another-way-form' as never].submit(), false)\n  )\n\n  const { realm, locale, auth, url, message, isAppInitiatedAction } = kcContext\n\n  const [isExtraCssLoaded, setExtraCssLoaded] = useReducer(() => true, false)\n\n  useEffect(() => {\n    if (!doFetchDefaultThemeResources) {\n      setExtraCssLoaded()\n      return\n    }\n\n    let isUnmounted = false\n    const cleanups: (() => void)[] = []\n\n    const toArr = (x: string | readonly string[] | undefined) =>\n      typeof x === 'string' ? x.split(' ') : x ?? []\n\n    Promise.all(\n      [\n        ...toArr(props.stylesCommon).map(relativePath =>\n          pathJoin(url.resourcesCommonPath, relativePath)\n        ),\n        ...toArr(props.styles).map(relativePath => pathJoin(url.resourcesPath, relativePath)),\n      ]\n        .reverse()\n        .map(href =>\n          headInsert({\n            type: 'css',\n            href,\n            position: 'prepend',\n          })\n        )\n    ).then(() => {\n      if (isUnmounted) {\n        return\n      }\n\n      setExtraCssLoaded()\n    })\n\n    toArr(props.scripts).forEach(relativePath =>\n      headInsert({\n        type: 'javascript',\n        src: pathJoin(url.resourcesPath, relativePath),\n      })\n    )\n\n    if (props.kcHtmlClass !== undefined) {\n      const htmlClassList = document.getElementsByTagName('html')[0].classList\n\n      const tokens = clsx(props.kcHtmlClass).split(' ')\n\n      htmlClassList.add(...tokens)\n\n      cleanups.push(() => htmlClassList.remove(...tokens))\n    }\n\n    return () => {\n      isUnmounted = true\n\n      cleanups.forEach(f => f())\n    }\n  }, [props.kcHtmlClass])\n\n  if (!isExtraCssLoaded) {\n    return null\n  }\n\n  return (\n    <div className={clsx(props.kcLoginClass)}>\n      <div id='kc-header' className={clsx(props.kcHeaderClass)}>\n        <div id='kc-header-wrapper' className={clsx(props.kcHeaderWrapperClass)}>\n          <img src={LogoApp} alt='Logo App' />\n        </div>\n      </div>\n\n      <div className={clsx(props.kcFormCardClass, displayWide && props.kcFormCardAccountClass)}>\n        <header className={clsx(props.kcFormHeaderClass)}>\n          {realm.internationalizationEnabled &&\n            (assert(locale !== undefined), true) &&\n            locale.supported.length > 1 && (\n              <div id='kc-locale'>\n                <div id='kc-locale-wrapper' className={clsx(props.kcLocaleWrapperClass)}>\n                  <div className='kc-dropdown' id='kc-locale-dropdown'>\n                    <a href='#' id='kc-current-locale-link'>\n                      {labelBySupportedLanguageTag[currentLanguageTag]}\n                    </a>\n                    <ul>\n                      {locale.supported.map(({ languageTag }) => (\n                        <li key={languageTag} className='kc-dropdown-item'>\n                          <a href='#' onClick={onChangeLanguageClickFactory(languageTag)}>\n                            {labelBySupportedLanguageTag[languageTag]}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            )}\n          {!(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (\n            displayRequiredFields ? (\n              <div className={clsx(props.kcContentWrapperClass)}>\n                <div className={clsx(props.kcLabelWrapperClass, 'subtitle')}>\n                  <span className='subtitle'>\n                    <span className='required'>*</span>\n                    {msg('requiredFields')}\n                  </span>\n                </div>\n                <div className='col-md-10'>\n                  <h1 id='kc-page-title'>{headerNode}</h1>\n                </div>\n              </div>\n            ) : (\n              <h1 id='kc-page-title'>{headerNode}</h1>\n            )\n          ) : displayRequiredFields ? (\n            <div className={clsx(props.kcContentWrapperClass)}>\n              <div className={clsx(props.kcLabelWrapperClass, 'subtitle')}>\n                <span className='subtitle'>\n                  <span className='required'>*</span> {msg('requiredFields')}\n                </span>\n              </div>\n              <div className='col-md-10'>\n                {showUsernameNode}\n                <div className={clsx(props.kcFormGroupClass)}>\n                  <div id='kc-username'>\n                    <label id='kc-attempted-username'>{auth?.attemptedUsername}</label>\n                    <a id='reset-login' href={url.loginRestartFlowUrl}>\n                      <div className='kc-login-tooltip'>\n                        <i className={clsx(props.kcResetFlowIcon)}></i>\n                        <span className='kc-tooltip-text'>{msg('restartLoginTooltip')}</span>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <>\n              {showUsernameNode}\n              <div className={clsx(props.kcFormGroupClass)}>\n                <div id='kc-username'>\n                  <label id='kc-attempted-username'>{auth?.attemptedUsername}</label>\n                  <a id='reset-login' href={url.loginRestartFlowUrl}>\n                    <div className='kc-login-tooltip'>\n                      <i className={clsx(props.kcResetFlowIcon)}></i>\n                      <span className='kc-tooltip-text'>{msg('restartLoginTooltip')}</span>\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </>\n          )}\n        </header>\n        <div id='kc-content'>\n          <div id='kc-content-wrapper'>\n            {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n            {displayMessage &&\n              message !== undefined &&\n              (message.type !== 'warning' || !isAppInitiatedAction) && (\n                <div className={clsx('alert', `alert-${message.type}`)}>\n                  {message.type === 'success' && (\n                    <span\n                      className={clsx(props.kcFeedbackSuccessIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'warning' && (\n                    <span\n                      className={clsx(props.kcFeedbackWarningIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'error' && (\n                    <span\n                      className={clsx(props.kcFeedbackErrorIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  {message.type === 'info' && (\n                    <span\n                      className={clsx(props.kcFeedbackInfoIcon)}\n                      style={{ background: 'none' }}\n                    ></span>\n                  )}\n                  <span\n                    className='kc-feedback-text'\n                    style={{ background: 'none' }}\n                    dangerouslySetInnerHTML={{\n                      __html: message.summary,\n                    }}\n                  />\n                </div>\n              )}\n            {formNode}\n            {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\n              <form\n                id='kc-select-try-another-way-form'\n                action={url.loginAction}\n                method='post'\n                className={clsx(displayWide && props.kcContentWrapperClass)}\n              >\n                <div\n                  className={clsx(\n                    displayWide && [\n                      props.kcFormSocialAccountContentClass,\n                      props.kcFormSocialAccountClass,\n                    ]\n                  )}\n                >\n                  <div className={clsx(props.kcFormGroupClass)}>\n                    <input type='hidden' name='tryAnotherWay' value='on' />\n                    <a href='#' id='try-another-way' onClick={onTryAnotherWayClick}>\n                      {msg('doTryAnotherWay')}\n                    </a>\n                  </div>\n                </div>\n              </form>\n            )}\n            {displayInfo && (\n              <div id='kc-info' className={clsx(props.kcSignUpClass)}>\n                <div id='kc-info-wrapper' className={clsx(props.kcInfoAreaWrapperClass)}>\n                  {infoNode}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n})\n\nexport default Template\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["LoginPassword","memo","props","kcContext","i18n","doFetchDefaultThemeResources","Template","DefaultTemplate","kcProps","realm","url","login","msg","msgStr","useState","isLoginButtonDisabled","setIsLoginButtonDisabled","onSubmit","useConstCallback","e","preventDefault","target","submit","headerNode","formNode","id","action","loginAction","method","className","clsx","kcFormGroupClass","htmlFor","kcLabelClass","tabIndex","kcInputClass","name","type","autoFocus","autoComplete","defaultValue","password","kcFormSettingClass","kcFormOptionsWrapperClass","resetPasswordAllowed","href","loginResetCredentialsUrl","kcButtonClass","kcButtonPrimaryClass","kcButtonBlockClass","kcButtonLargeClass","value","disabled","displayInfo","displayMessage","displayRequiredFields","displayWide","showAnotherWayIfPresent","showUsernameNode","infoNode","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","onChangeLanguageClickFactory","useCallbackFactory","kcLanguageTag","onTryAnotherWayClick","document","forms","locale","auth","message","isAppInitiatedAction","useReducer","isExtraCssLoaded","setExtraCssLoaded","useEffect","isUnmounted","cleanups","toArr","x","split","Promise","all","stylesCommon","map","relativePath","pathJoin","resourcesCommonPath","styles","resourcesPath","reverse","headInsert","position","then","scripts","forEach","src","undefined","kcHtmlClass","htmlClassList","getElementsByTagName","classList","tokens","add","push","remove","f","kcLoginClass","kcHeaderClass","kcHeaderWrapperClass","LogoApp","alt","kcFormCardClass","kcFormCardAccountClass","kcFormHeaderClass","internationalizationEnabled","assert","supported","length","kcLocaleWrapperClass","languageTag","onClick","showUsername","showResetCredentials","kcContentWrapperClass","kcLabelWrapperClass","attemptedUsername","loginRestartFlowUrl","kcResetFlowIcon","kcFeedbackSuccessIcon","style","background","kcFeedbackWarningIcon","kcFeedbackErrorIcon","kcFeedbackInfoIcon","dangerouslySetInnerHTML","__html","summary","showTryAnotherWayLink","kcFormSocialAccountContentClass","kcFormSocialAccountClass","kcSignUpClass","kcInfoAreaWrapperClass","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}