{"version":3,"file":"static/js/326.bb79c625.chunk.js","mappings":"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","sources":["../node_modules/rfc4648/lib/index.mjs","../node_modules/keycloakify/src/lib/components/WebauthnAuthenticate.tsx","../node_modules/rfc4648/lib/index.js"],"sourcesContent":["// Generated by rollup-plugin-mjs-entry\n\nimport cjs from './index.js';\n\nexport const base16 = cjs.base16;\nexport const base32 = cjs.base32;\nexport const base32hex = cjs.base32hex;\nexport const base64 = cjs.base64;\nexport const base64url = cjs.base64url;\nexport const codec = cjs.codec;\nexport default cjs;\n","import React, { useRef, useState, memo } from \"react\";\nimport DefaultTemplate from \"./Template\";\nimport type { TemplateProps } from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport { clsx } from \"../tools/clsx\";\nimport type { I18n, MessageKeyBase } from \"../i18n\";\nimport { base64url } from \"rfc4648\";\nimport { useConstCallback } from \"powerhooks/useConstCallback\";\n\nexport type WebauthnAuthenticateProps = KcProps & {\n    kcContext: KcContextBase.WebauthnAuthenticate;\n    i18n: I18n;\n    doFetchDefaultThemeResources?: boolean;\n    Template?: (props: TemplateProps) => JSX.Element | null;\n};\n\nconst WebauthnAuthenticate = memo((props: WebauthnAuthenticateProps) => {\n    const { kcContext, i18n, doFetchDefaultThemeResources = true, Template = DefaultTemplate, ...kcProps } = props;\n\n    const { url } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const { authenticators, challenge, shouldDisplayAuthenticators, userVerification, rpId } = kcContext;\n    const createTimeout = Number(kcContext.createTimeout);\n    const isUserIdentified = kcContext.isUserIdentified == \"true\";\n\n    const webAuthnAuthenticate = useConstCallback(async () => {\n        if (!isUserIdentified) {\n            return;\n        }\n        const allowCredentials = authenticators.authenticators.map(\n            authenticator =>\n                ({\n                    id: base64url.parse(authenticator.credentialId, { loose: true }),\n                    type: \"public-key\"\n                } as PublicKeyCredentialDescriptor)\n        );\n        // Check if WebAuthn is supported by this browser\n        if (!window.PublicKeyCredential) {\n            setError(msgStr(\"webauthn-unsupported-browser-text\"));\n            submitForm();\n            return;\n        }\n\n        const publicKey: PublicKeyCredentialRequestOptions = {\n            rpId,\n            challenge: base64url.parse(challenge, { loose: true })\n        };\n\n        if (createTimeout !== 0) {\n            publicKey.timeout = createTimeout * 1000;\n        }\n\n        if (allowCredentials.length) {\n            publicKey.allowCredentials = allowCredentials;\n        }\n\n        if (userVerification !== \"not specified\") {\n            publicKey.userVerification = userVerification;\n        }\n\n        try {\n            const resultRaw = await navigator.credentials.get({ publicKey });\n            if (!resultRaw || resultRaw.type != \"public-key\") return;\n            const result = resultRaw as PublicKeyCredential;\n            if (!(\"authenticatorData\" in result.response)) return;\n            const response = result.response as AuthenticatorAssertionResponse;\n            const clientDataJSON = response.clientDataJSON;\n            const authenticatorData = response.authenticatorData;\n            const signature = response.signature;\n\n            setClientDataJSON(base64url.stringify(new Uint8Array(clientDataJSON), { pad: false }));\n            setAuthenticatorData(base64url.stringify(new Uint8Array(authenticatorData), { pad: false }));\n            setSignature(base64url.stringify(new Uint8Array(signature), { pad: false }));\n            setCredentialId(result.id);\n            setUserHandle(base64url.stringify(new Uint8Array(response.userHandle!), { pad: false }));\n            submitForm();\n        } catch (err) {\n            setError(String(err));\n            submitForm();\n        }\n    });\n\n    const webAuthForm = useRef<HTMLFormElement>(null);\n    const submitForm = useConstCallback(() => {\n        webAuthForm.current!.submit();\n    });\n\n    const [clientDataJSON, setClientDataJSON] = useState(\"\");\n    const [authenticatorData, setAuthenticatorData] = useState(\"\");\n    const [signature, setSignature] = useState(\"\");\n    const [credentialId, setCredentialId] = useState(\"\");\n    const [userHandle, setUserHandle] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n            headerNode={msg(\"webauthn-login-title\")}\n            formNode={\n                <div id=\"kc-form-webauthn\" className={clsx(kcProps.kcFormClass)}>\n                    <form id=\"webauth\" action={url.loginAction} ref={webAuthForm} method=\"post\">\n                        <input type=\"hidden\" id=\"clientDataJSON\" name=\"clientDataJSON\" value={clientDataJSON} />\n                        <input type=\"hidden\" id=\"authenticatorData\" name=\"authenticatorData\" value={authenticatorData} />\n                        <input type=\"hidden\" id=\"signature\" name=\"signature\" value={signature} />\n                        <input type=\"hidden\" id=\"credentialId\" name=\"credentialId\" value={credentialId} />\n                        <input type=\"hidden\" id=\"userHandle\" name=\"userHandle\" value={userHandle} />\n                        <input type=\"hidden\" id=\"error\" name=\"error\" value={error} />\n                    </form>\n                    <div className={clsx(kcProps.kcFormGroupClass)}>\n                        {authenticators &&\n                            (() => (\n                                <form id=\"authn_select\" className={clsx(kcProps.kcFormClass)}>\n                                    {authenticators.authenticators.map(authenticator => (\n                                        <input\n                                            type=\"hidden\"\n                                            name=\"authn_use_chk\"\n                                            value={authenticator.credentialId}\n                                            key={authenticator.credentialId}\n                                        />\n                                    ))}\n                                </form>\n                            ))()}\n                        {authenticators &&\n                            shouldDisplayAuthenticators &&\n                            (() => (\n                                <>\n                                    {authenticators.authenticators.length > 1 && (\n                                        <p className={clsx(kcProps.kcSelectAuthListItemTitle)}>{msg(\"webauthn-available-authenticators\")}</p>\n                                    )}\n                                    <div className={clsx(kcProps.kcFormClass)}>\n                                        {authenticators.authenticators.map(authenticator => (\n                                            <div id=\"kc-webauthn-authenticator\" className={clsx(kcProps.kcSelectAuthListItemClass)}>\n                                                <div className={clsx(kcProps.kcSelectAuthListItemIconClass)}>\n                                                    <i\n                                                        className={clsx(\n                                                            kcProps[authenticator.transports.iconClass] ?? kcProps.kcWebAuthnDefaultIcon,\n                                                            kcProps.kcSelectAuthListItemIconPropertyClass\n                                                        )}\n                                                    />\n                                                </div>\n                                                <div className={clsx(kcProps.kcSelectAuthListItemBodyClass)}>\n                                                    <div\n                                                        id=\"kc-webauthn-authenticator-label\"\n                                                        className={clsx(kcProps.kcSelectAuthListItemHeadingClass)}\n                                                    >\n                                                        {authenticator.label}\n                                                    </div>\n\n                                                    {authenticator.transports && authenticator.transports.displayNameProperties.length && (\n                                                        <div\n                                                            id=\"kc-webauthn-authenticator-transport\"\n                                                            className={clsx(kcProps.kcSelectAuthListItemDescriptionClass)}\n                                                        >\n                                                            {authenticator.transports.displayNameProperties.map(\n                                                                (transport: MessageKeyBase, index: number) => (\n                                                                    <>\n                                                                        <span>{msg(transport)}</span>\n                                                                        {index < authenticator.transports.displayNameProperties.length - 1 && (\n                                                                            <span>{\", \"}</span>\n                                                                        )}\n                                                                    </>\n                                                                )\n                                                            )}\n                                                        </div>\n                                                    )}\n\n                                                    <div className={clsx(kcProps.kcSelectAuthListItemDescriptionClass)}>\n                                                        <span id=\"kc-webauthn-authenticator-created-label\">{msg(\"webauthn-createdAt-label\")}</span>\n                                                        <span id=\"kc-webauthn-authenticator-created\">{authenticator.createdAt}</span>\n                                                    </div>\n                                                </div>\n                                                <div className={clsx(kcProps.kcSelectAuthListItemFillClass)} />\n                                            </div>\n                                        ))}\n                                    </div>\n                                </>\n                            ))()}\n                        <div id=\"kc-form-buttons\" className={clsx(kcProps.kcFormButtonsClass)}>\n                            <input\n                                id=\"authenticateWebAuthnButton\"\n                                type=\"button\"\n                                onClick={webAuthnAuthenticate}\n                                autoFocus={true}\n                                value={msgStr(\"webauthn-doAuthenticate\")}\n                                className={clsx(\n                                    kcProps.kcButtonClass,\n                                    kcProps.kcButtonPrimaryClass,\n                                    kcProps.kcButtonBlockClass,\n                                    kcProps.kcButtonLargeClass\n                                )}\n                            />\n                        </div>\n                    </div>\n                </div>\n            }\n        />\n    );\n});\n\nexport default WebauthnAuthenticate;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nfunction parse(string, encoding, opts) {\n  var _opts$out;\n\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  // Build the character lookup table:\n  if (!encoding.codes) {\n    encoding.codes = {};\n\n    for (var i = 0; i < encoding.chars.length; ++i) {\n      encoding.codes[encoding.chars[i]] = i;\n    }\n  } // The string must have a whole number of bytes:\n\n\n  if (!opts.loose && string.length * encoding.bits & 7) {\n    throw new SyntaxError('Invalid padding');\n  } // Count the padding bytes:\n\n\n  var end = string.length;\n\n  while (string[end - 1] === '=') {\n    --end; // If we get a whole number of bytes, there is too much padding:\n\n    if (!opts.loose && !((string.length - end) * encoding.bits & 7)) {\n      throw new SyntaxError('Invalid padding');\n    }\n  } // Allocate the output:\n\n\n  var out = new ((_opts$out = opts.out) != null ? _opts$out : Uint8Array)(end * encoding.bits / 8 | 0); // Parse the data:\n\n  var bits = 0; // Number of bits currently in the buffer\n\n  var buffer = 0; // Bits waiting to be written out, MSB first\n\n  var written = 0; // Next byte to write\n\n  for (var _i = 0; _i < end; ++_i) {\n    // Read one character from the string:\n    var value = encoding.codes[string[_i]];\n\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[_i]);\n    } // Append the bits to the buffer:\n\n\n    buffer = buffer << encoding.bits | value;\n    bits += encoding.bits; // Write out some bits if the buffer has a byte's worth:\n\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 0xff & buffer >> bits;\n    }\n  } // Verify that we have received just enough bits:\n\n\n  if (bits >= encoding.bits || 0xff & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n\n  return out;\n}\nfunction stringify(data, encoding, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var _opts = opts,\n      _opts$pad = _opts.pad,\n      pad = _opts$pad === void 0 ? true : _opts$pad;\n  var mask = (1 << encoding.bits) - 1;\n  var out = '';\n  var bits = 0; // Number of bits currently in the buffer\n\n  var buffer = 0; // Bits waiting to be written out, MSB first\n\n  for (var i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = buffer << 8 | 0xff & data[i];\n    bits += 8; // Write out as much as we can:\n\n    while (bits > encoding.bits) {\n      bits -= encoding.bits;\n      out += encoding.chars[mask & buffer >> bits];\n    }\n  } // Partial character:\n\n\n  if (bits) {\n    out += encoding.chars[mask & buffer << encoding.bits - bits];\n  } // Add padding characters until we hit a byte boundary:\n\n\n  if (pad) {\n    while (out.length * encoding.bits & 7) {\n      out += '=';\n    }\n  }\n\n  return out;\n}\n\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nvar base16Encoding = {\n  chars: '0123456789ABCDEF',\n  bits: 4\n};\nvar base32Encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bits: 5\n};\nvar base32HexEncoding = {\n  chars: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bits: 5\n};\nvar base64Encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bits: 6\n};\nvar base64UrlEncoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bits: 6\n};\nvar base16 = {\n  parse: function parse$1(string, opts) {\n    return parse(string.toUpperCase(), base16Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base16Encoding, opts);\n  }\n};\nvar base32 = {\n  parse: function parse$1(string, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    return parse(opts.loose ? string.toUpperCase().replace(/0/g, 'O').replace(/1/g, 'L').replace(/8/g, 'B') : string, base32Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base32Encoding, opts);\n  }\n};\nvar base32hex = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base32HexEncoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base32HexEncoding, opts);\n  }\n};\nvar base64 = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base64Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base64Encoding, opts);\n  }\n};\nvar base64url = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base64UrlEncoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base64UrlEncoding, opts);\n  }\n};\nvar codec = {\n  parse: parse,\n  stringify: stringify\n};\n\nexports.base16 = base16;\nexports.base32 = base32;\nexports.base32hex = base32hex;\nexports.base64 = base64;\nexports.base64url = base64url;\nexports.codec = codec;\n"],"names":["base64url","cjs","memo","props","kcContext","i18n","doFetchDefaultThemeResources","Template","DefaultTemplate","kcProps","__rest","url","msg","msgStr","authenticators","challenge","shouldDisplayAuthenticators","userVerification","rpId","createTimeout","Number","isUserIdentified","webAuthnAuthenticate","useConstCallback","allowCredentials","map","authenticator","id","parse","credentialId","loose","type","window","PublicKeyCredential","setError","submitForm","publicKey","timeout","length","navigator","credentials","get","resultRaw","result","response","clientDataJSON","authenticatorData","signature","setClientDataJSON","stringify","Uint8Array","pad","setAuthenticatorData","setSignature","setCredentialId","setUserHandle","userHandle","String","webAuthForm","useRef","current","submit","useState","error","React","Object","headerNode","formNode","className","clsx","kcFormClass","action","loginAction","ref","method","name","value","kcFormGroupClass","key","kcSelectAuthListItemTitle","kcSelectAuthListItemClass","kcSelectAuthListItemIconClass","transports","iconClass","_a","kcWebAuthnDefaultIcon","kcSelectAuthListItemIconPropertyClass","kcSelectAuthListItemBodyClass","kcSelectAuthListItemHeadingClass","label","displayNameProperties","kcSelectAuthListItemDescriptionClass","transport","index","createdAt","kcSelectAuthListItemFillClass","kcFormButtonsClass","onClick","autoFocus","kcButtonClass","kcButtonPrimaryClass","kcButtonBlockClass","kcButtonLargeClass","string","encoding","opts","_opts$out","codes","i","chars","bits","SyntaxError","end","out","buffer","written","_i","undefined","data","_opts$pad","mask","base16Encoding","base32Encoding","base32HexEncoding","base64Encoding","base64UrlEncoding","base16","toUpperCase","base32","replace","base32hex","base64","codec","exports"],"sourceRoot":""}